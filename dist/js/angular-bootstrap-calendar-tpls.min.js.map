{"version":3,"sources":["templates.js","angular-bootstrap-calendar-tpls.js","services/moment.js","services/interact.js","services/calendarTitle.js","services/calendarHelper.js","services/calendarDebounce.js","services/calendarConfig.js","filters/calendarTruncateEventTitle.js","filters/calendarLimitTo.js","filters/calendarDate.js","directives/mwlElementDimensions.js","directives/mwlDroppable.js","directives/mwlDraggable.js","directives/mwlDateModifier.js","directives/mwlCollapseFallback.js","directives/mwlCalendarYear.js","directives/mwlCalendarWeek.js","directives/mwlCalendarSlideBox.js","directives/mwlCalendarMonth.js","directives/mwlCalendarHourList.js","directives/mwlCalendarDay.js","directives/mwlCalendar.js"],"names":["window","$templateCache","angular","run","put","module","factory","moment","constant","interact","calendarHelper","formatDate","weekTitleLabel","replace","day","currentDay","month","calendarConfig","titleFormats","week","year","format","dateFormatter","dateFilter","date","oldStart","adjustEndDateFromStartDiff","toDate","oldEnd","newStart","eventIsInPeriod","eventStart","periodStart","diff","periodEnd","recursOn","event","startsAt","eventEnd","set","Error","filterEventsInPeriod","startPeriod","endPeriod","isAfter","isBefore","isSame","calendarDate","period","filter","allEvents","getEventsInPeriod","incrementsBadgeTotal","startOf","length","endOf","weekdays","events","count","getWeekDayNames","getYearView","view","eventsInPeriod","weekday","dateFormats","weekDay","push","label","periodEvents","clone","badgeTotal","getBadgeTotal","startOfMonth","endOfMonthView","today","displayAllMonthEvents","inMonth","isPast","isFuture","isWeekend","indexOf","monthEvents","getWeekView","endOfWeek","days","weekDayLabel","dayCounter","isToday","dayLabel","eventsSorted","weekViewEnd","weekViewStart","span","offset","endsAt","daySpan","dayOffset","dayEndHour","hourHeight","calendarHeight","dayStartHour","dayViewEnd","hourHeightMultiplier","dayViewStart","hours","buckets","calendarStart","add","calendarEnd","height","top","diffStart","left","forEach","bucket","map","canFitInThisBucket","cannotFitInABucket","weekView","bucketIndex","bucketItem","getWeekViewWithTimes","dayViewSplit","newDayEvents","getDayView","dayEvents","newEvents","getDayViewHeight","dayViewStartM","concat","getMonthView","service","args","$timeout","debounce","immediate","timeout","callNow","cancel","apply","context","this","arguments","later","wait","func","provider","defaultFormats","hour","title","defaultDateFormats","defaultTitleFormats","timeLabel","copy","configProvider","extend","setTitleFormats","formats","strings","i18nStrings","setDisplayAllMonthEvents","value","setDateFormatter","showTimesOnWeekView","string","boxHeight","substr","limitToFilter","version","Number","limit","begin","Math","abs","input","Infinity","toString","isNaN","slice","parseInt","max","getFromConfig","$stateful","$parse","$attrs","mwlElementDimensions","directive","$element","$scope","assign","restrict","offsetWidth","controller","offsetHeight","element","target","addClass","dropzone","ondropdeactivate","removeClass","ondrop","relatedTarget","dropData","$apply","unbindDestroy","onDrop","$on","unset","snapGridDimensions","$window","snapGrid","getUnitsMoved","y","gridDimensions","result","css","transformValue","canDrag","mwlDraggable","x","onstart","snap","style","pointerEvents","onDragStart","elm","onmove","parseFloat","attr","dx","dy","axis","position","translateElement","onDrag","onend","removeAttr","onDragEnd","isDefined","setToToday","Date","increment","onClick","decrement","unbind","subtract","bind","scope","unbindWatcher","$watch","mwlCollapseFallback","shouldCollapse","$injector","has","firstRun","autoOpen","vm","monthClicked","monthClickedFirstRun","openMonthIndex","openRowIndex","monthIndex","handleEventDrop","newEnd","onEventDrop","floor","calendarNewEventStart","calendarNewEventEnd","newMonthDate","calendarEvent","templateUrl","customData","onEventClick","require","onDeleteEventClick","editEventHtml","deleteEventHtml","onTimespanClick","onEditEventClick","calendarCtrl","showTimes","$sce","dayViewHeight","weekDragged","minuteChunksMoved","minutesDiff","daysDiff","tempStartsAt","tempTimeChanged","isOpen","link","isMonthView","attrs","ctrls","monthOffsets","weekDays","rows","i","dayClickedFirstRun","dayClicked","openDayIndex","dayIndex","highlightEvent","highlightClass","shouldAddClass","dayContainsEvent","type","newDayDate","updateDays","originalLocale","locale","timeChanged","$locale","calendarTitle","calendarDebounce","drillDown","changeView","newDay","onDrillDownClick","nextView","calendarNextView","previousDate","previousView","refreshCalendar","rawDate","index","configurable","shouldUpdate","Object","defineProperty","enumerable","currentDate","$broadcast","unbindLocaleWatcher","unbindOnDestroy","id","unbindDestroyListener"],"mappings":"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","file":"angular-bootstrap-calendar-tpls.min.js","sourcesContent":["angular.module(\"mwl.calendar\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"src/templates/calendar.html\",\"<div class=\\\"cal-context\\\" ng-switch=\\\"view\\\"><div class=\\\"alert alert-danger\\\" ng-switch-default>The value passed to the view attribute of the calendar is not set</div><div class=\\\"alert alert-danger\\\" ng-hide=\\\"currentDay\\\">The value passed to current-day attribute of the calendar is not set</div><mwl-calendar-year custom-data=\\\"customData\\\" events=\\\"events\\\" current-day=\\\"currentDay\\\" on-event-click=\\\"onEventClick\\\" on-event-drop=\\\"onEventDrop\\\" on-edit-event-click=\\\"onEditEventClick\\\" on-delete-event-click=\\\"onDeleteEventClick\\\" on-timespan-click=\\\"onTimespanClick\\\" edit-event-html=\\\"editEventHtml\\\" delete-event-html=\\\"deleteEventHtml\\\" auto-open=\\\"autoOpen\\\" ng-switch-when=\\\"year\\\"></mwl-calendar-year><mwl-calendar-month custom-data=\\\"customData\\\" events=\\\"events\\\" current-day=\\\"currentDay\\\" on-event-click=\\\"onEventClick\\\" on-event-drop=\\\"onEventDrop\\\" on-edit-event-click=\\\"onEditEventClick\\\" on-delete-event-click=\\\"onDeleteEventClick\\\" on-timespan-click=\\\"onTimespanClick\\\" edit-event-html=\\\"editEventHtml\\\" delete-event-html=\\\"deleteEventHtml\\\" auto-open=\\\"autoOpen\\\" ng-switch-when=\\\"month\\\"></mwl-calendar-month><mwl-calendar-week custom-data=\\\"customData\\\" events=\\\"events\\\" current-day=\\\"currentDay\\\" on-event-click=\\\"onEventClick\\\" on-event-drop=\\\"onEventDrop\\\" day-view-start=\\\"dayViewStart\\\" day-view-end=\\\"dayViewEnd\\\" day-view-split=\\\"dayViewSplit || 30\\\" ng-switch-when=\\\"week\\\"></mwl-calendar-week><mwl-calendar-day custom-data=\\\"customData\\\" events=\\\"events\\\" current-day=\\\"currentDay\\\" on-event-click=\\\"onEventClick\\\" on-event-drop=\\\"onEventDrop\\\" day-view-start=\\\"dayViewStart\\\" day-view-end=\\\"dayViewEnd\\\" day-view-split=\\\"dayViewSplit || 30\\\" ng-switch-when=\\\"day\\\"></mwl-calendar-day></div>\");\n$templateCache.put(\"src/templates/calendarDayView.html\",\"<div class=\\\"cal-day-box\\\"><div class=\\\"row-fluid clearfix cal-row-head\\\"><div class=\\\"span1 col-xs-1 cal-cell\\\" ng-bind=\\\"vm.calendarConfig.i18nStrings.timeLabel\\\"></div><div class=\\\"span11 col-xs-11 cal-cell\\\" ng-bind=\\\"vm.calendarConfig.i18nStrings.eventsLabel\\\"></div></div><div class=\\\"cal-day-panel clearfix\\\" ng-style=\\\"{height: vm.dayViewHeight + \\'px\\'}\\\"><mwl-calendar-hour-list day-view-start=\\\"dayViewStart\\\" day-view-end=\\\"dayViewEnd\\\" day-view-split=\\\"dayViewSplit\\\"></mwl-calendar-hour-list><div class=\\\"pull-left day-event day-highlight\\\" ng-class=\\\"\\'dh-event-\\' + event.type + \\' \\' + event.cssClass\\\" ng-repeat=\\\"event in vm.view track by event.$id\\\" ng-style=\\\"{top: event.top + \\'px\\', left: event.left + 60 + \\'px\\', height: event.height + \\'px\\'}\\\" mwl-draggable=\\\"event.editable !== false\\\" axis=\\\"y\\\" snap-grid=\\\"{y: 30}\\\" on-drag=\\\"vm.tempTimeChanged(event, y)\\\" on-drag-end=\\\"vm.timeChanged(event, y)\\\"><span class=\\\"cal-hours\\\"><span ng-show=\\\"event.top == 0\\\"><span ng-bind=\\\"(event.tempStartsAt || event.startsAt) | calendarDate:\\'day\\':true\\\"></span>,</span> <span ng-bind=\\\"(event.tempStartsAt || event.startsAt) | calendarDate:\\'time\\':true\\\"></span></span> <a href=\\\"javascript:;\\\" class=\\\"event-item\\\" ng-click=\\\"onEventClick({calendarEvent: event})\\\"><span ng-bind-html=\\\"vm.$sce.trustAsHtml(event.title) | calendarTruncateEventTitle:20:event.height\\\"></span></a></div></div></div>\");\n$templateCache.put(\"src/templates/calendarHourList.html\",\"<div class=\\\"cal-day-panel-hour\\\"><div class=\\\"cal-day-hour\\\" ng-repeat=\\\"hour in vm.hours track by $index\\\"><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><strong ng-bind=\\\"hour.label\\\"></strong></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\" ng-show=\\\"vm.dayViewSplit < 30\\\"><div class=\\\"span1 col-xs-1\\\"></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\" ng-show=\\\"vm.dayViewSplit < 30\\\"><div class=\\\"span1 col-xs-1\\\"></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\" ng-show=\\\"vm.dayViewSplit < 15\\\"><div class=\\\"span1 col-xs-1\\\"></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\" ng-show=\\\"vm.dayViewSplit < 15\\\"><div class=\\\"span1 col-xs-1\\\"></div><div class=\\\"span11 col-xs-11\\\"></div></div></div></div>\");\n$templateCache.put(\"src/templates/calendarMonthDay.html\",\"<div mwl-droppable on-drop=\\\"vm.handleEventDrop(dropData.event, day.date)\\\" class=\\\"cal-month-day\\\" ng-class=\\\"{\\n            \\'cal-day-outmonth\\': !day.inMonth,\\n            \\'cal-day-inmonth\\': day.inMonth,\\n            \\'cal-day-weekend\\': day.isWeekend,\\n            \\'cal-day-past\\': day.isPast,\\n            \\'cal-day-today\\': day.isToday,\\n            \\'cal-day-future\\': day.isFuture\\n          }\\\"><small class=\\\"cal-events-num badge badge-important pull-left\\\" ng-bind=\\\"day.badgeTotal\\\" ng-if=\\\"day.badgeTotal > 0\\\"></small> <span class=\\\"pull-right\\\" data-cal-date ng-click=\\\"vm.calendarCtrl.drillDown(day.date)\\\" ng-bind=\\\"day.label\\\"></span><div class=\\\"cal-day-tick\\\" ng-show=\\\"dayIndex === vm.openDayIndex\\\"><i class=\\\"glyphicon glyphicon-chevron-up\\\"></i> <i class=\\\"fa fa-chevron-up\\\"></i></div><div ng-include=\\\"\\'src/templates/calendarMonthEventsList.html\\'\\\"></div></div>\");\n$templateCache.put(\"src/templates/calendarMonthEventsList.html\",\"<div class=\\\"events-list\\\" ng-show=\\\"day.events.length > 0\\\"><a ng-repeat=\\\"event in day.events | orderBy:\\'startsAt\\' track by event.$id\\\" href=\\\"javascript:;\\\" ng-click=\\\"onEventClick({calendarEvent: event})\\\" class=\\\"pull-left event\\\" ng-class=\\\"\\'event-\\' + event.type + \\' \\' + event.cssClass\\\" ng-mouseenter=\\\"vm.highlightEvent(event, true)\\\" ng-mouseleave=\\\"vm.highlightEvent(event, false)\\\" tooltip-append-to-body=\\\"true\\\" tooltip-html-unsafe=\\\"{{ (event.startsAt | calendarDate:\\'time\\':true) + \\' - \\' + event.title }}\\\" mwl-draggable=\\\"event.editable !== false\\\" drop-data=\\\"{event: event}\\\"></a></div>\");\n$templateCache.put(\"src/templates/calendarMonthView.html\",\"<div class=\\\"cal-row-fluid cal-row-head\\\"><div class=\\\"cal-cell1\\\" ng-repeat=\\\"day in vm.weekDays track by $index\\\" ng-bind=\\\"day\\\"></div></div><div class=\\\"cal-month-box\\\"><div ng-repeat=\\\"rowOffset in vm.monthOffsets track by rowOffset\\\"><div class=\\\"cal-row-fluid cal-before-eventlist\\\"><div ng-repeat=\\\"day in vm.view | calendarLimitTo:7:rowOffset track by $index\\\" ng-init=\\\"dayIndex = vm.view.indexOf(day)\\\" class=\\\"cal-cell1 cal-cell {{ day.highlightClass }}\\\" ng-click=\\\"vm.dayClicked(day)\\\" ng-class=\\\"{pointer: true}\\\"><div ng-include=\\\"\\'src/templates/calendarMonthDay.html\\'\\\"></div></div></div><mwl-calendar-slide-box is-open=\\\"vm.openRowIndex === $index\\\" custom-data=\\\"customData\\\" day=\\\"vm.view[vm.openDayIndex]\\\" events=\\\"vm.view[vm.openDayIndex].events\\\" on-event-click=\\\"onEventClick\\\" edit-event-html=\\\"editEventHtml\\\" on-edit-event-click=\\\"onEditEventClick\\\" delete-event-html=\\\"deleteEventHtml\\\" on-delete-event-click=\\\"onDeleteEventClick\\\"></mwl-calendar-slide-box></div></div>\");\n$templateCache.put(\"src/templates/calendarSlideBox.html\",\"\");\n$templateCache.put(\"src/templates/calendarWeekView.html\",\"<div class=\\\"cal-week-box\\\" ng-class=\\\"{\\'cal-day-box\\': vm.showTimes}\\\"><div class=\\\"cal-row-fluid cal-row-head\\\"><div class=\\\"cal-cell1\\\" ng-repeat=\\\"day in vm.view.days track by $index\\\" ng-class=\\\"{\\n        \\'cal-day-weekend\\': day.isWeekend,\\n        \\'cal-day-past\\': day.isPast,\\n        \\'cal-day-today\\': day.isToday,\\n        \\'cal-day-future\\': day.isFuture}\\\" mwl-element-dimensions=\\\"vm.dayColumnDimensions\\\"><span ng-bind=\\\"day.weekDayLabel\\\"></span><br><small><span data-cal-date ng-click=\\\"vm.calendarCtrl.drillDown(day.date)\\\" class=\\\"pointer\\\" ng-bind=\\\"day.dayLabel\\\"></span></small></div></div><div class=\\\"cal-day-panel clearfix\\\" ng-style=\\\"{height: vm.showTimes ? (vm.dayViewHeight + \\'px\\') : \\'auto\\'}\\\"><mwl-calendar-hour-list day-view-start=\\\"dayViewStart\\\" day-view-end=\\\"dayViewEnd\\\" day-view-split=\\\"dayViewSplit\\\" ng-if=\\\"vm.showTimes\\\"></mwl-calendar-hour-list><div class=\\\"row\\\"><div class=\\\"col-xs-12\\\"><div class=\\\"cal-row-fluid\\\" ng-repeat=\\\"event in vm.view.events track by event.$id\\\"><div ng-class=\\\"\\'cal-cell\\' + (vm.showTimes ? 1 : event.daySpan) + \\' cal-offset\\' + event.dayOffset + \\' day-highlight dh-event-\\' + event.type + \\' \\' + event.cssClass\\\" ng-style=\\\"{top: (event.top + 2) + \\'px\\', position: vm.showTimes ? \\'absolute\\' : \\'inherit\\'}\\\" data-event-class mwl-draggable=\\\"event.editable !== false\\\" axis=\\\"vm.showTimes ? \\'xy\\' : \\'x\\'\\\" snap-grid=\\\"vm.showTimes ? {x: vm.dayColumnDimensions.width, y: 30} : {x: vm.dayColumnDimensions.width}\\\" on-drag=\\\"vm.tempTimeChanged(event, y)\\\" on-drag-end=\\\"vm.weekDragged(event, x, y)\\\"><strong ng-bind=\\\"(event.tempStartsAt || event.startsAt) | calendarDate:\\'time\\':true\\\" ng-show=\\\"vm.showTimes\\\"></strong> <a href=\\\"javascript:;\\\" ng-click=\\\"onEventClick({calendarEvent: event})\\\" class=\\\"event-item\\\" ng-bind-html=\\\"vm.$sce.trustAsHtml(event.title)\\\" tooltip-html-unsafe=\\\"{{ event.title }}\\\" tooltip-placement=\\\"left\\\" tooltip-append-to-body=\\\"true\\\"></a></div></div></div></div></div></div>\");\n$templateCache.put(\"src/templates/calendarYearView.html\",\"<div class=\\\"cal-year-box\\\"><div ng-repeat=\\\"rowOffset in [0, 4, 8] track by rowOffset\\\"><div class=\\\"row cal-before-eventlist\\\"><div class=\\\"span3 col-md-3 col-xs-6 cal-cell\\\" ng-repeat=\\\"month in vm.view | calendarLimitTo:4:rowOffset track by $index\\\" ng-init=\\\"monthIndex = vm.view.indexOf(month)\\\" ng-click=\\\"vm.monthClicked(month)\\\" ng-class=\\\"{pointer: month.events.length > 0, \\'cal-day-today\\': month.isToday}\\\" mwl-droppable on-drop=\\\"vm.handleEventDrop(dropData.event, month.date)\\\"><span class=\\\"pull-right\\\" data-cal-date ng-click=\\\"vm.calendarCtrl.drillDown(month.date)\\\" ng-bind=\\\"month.label\\\"></span> <small class=\\\"cal-events-num badge badge-important pull-left\\\" ng-show=\\\"month.badgeTotal > 0\\\" ng-bind=\\\"month.badgeTotal\\\"></small><div class=\\\"cal-day-tick\\\" ng-show=\\\"monthIndex === vm.openMonthIndex && vm.view[vm.openMonthIndex].events.length > 0\\\"><i class=\\\"glyphicon glyphicon-chevron-up\\\"></i> <i class=\\\"fa fa-chevron-up\\\"></i></div></div></div><mwl-calendar-slide-box is-open=\\\"vm.openRowIndex === $index && vm.view[vm.openMonthIndex].events.length > 0\\\" events=\\\"vm.view[vm.openMonthIndex].events\\\" on-event-click=\\\"onEventClick\\\" edit-event-html=\\\"editEventHtml\\\" on-edit-event-click=\\\"onEditEventClick\\\" delete-event-html=\\\"deleteEventHtml\\\" on-delete-event-click=\\\"onDeleteEventClick\\\"></mwl-calendar-slide-box></div></div>\");}]);","/**\n * angular-bootstrap-calendar - A pure AngularJS bootstrap themed responsive calendar that can display events and has views for year, month, week and day\n * @version v0.11.2\n * @link https://github.com/mattlewis92/angular-bootstrap-calendar\n * @license MIT\n */\n(function (window, angular) {\n    'use strict';\n    angular.module('mwl.calendar', []);\n    angular.module('mwl.calendar').run([\n        '$templateCache',\n        function ($templateCache) {\n            $templateCache.put('src/templates/calendar.html', '<div class=\"cal-context\" ng-switch=\"view\"><div class=\"alert alert-danger\" ng-switch-default>The value passed to the view attribute of the calendar is not set</div><div class=\"alert alert-danger\" ng-hide=\"currentDay\">The value passed to current-day attribute of the calendar is not set</div><mwl-calendar-year custom-data=\"customData\" events=\"events\" current-day=\"currentDay\" on-event-click=\"onEventClick\" on-event-drop=\"onEventDrop\" on-edit-event-click=\"onEditEventClick\" on-delete-event-click=\"onDeleteEventClick\" on-timespan-click=\"onTimespanClick\" edit-event-html=\"editEventHtml\" delete-event-html=\"deleteEventHtml\" auto-open=\"autoOpen\" ng-switch-when=\"year\"></mwl-calendar-year><mwl-calendar-month custom-data=\"customData\" events=\"events\" current-day=\"currentDay\" on-event-click=\"onEventClick\" on-event-drop=\"onEventDrop\" on-edit-event-click=\"onEditEventClick\" on-delete-event-click=\"onDeleteEventClick\" on-timespan-click=\"onTimespanClick\" edit-event-html=\"editEventHtml\" delete-event-html=\"deleteEventHtml\" auto-open=\"autoOpen\" ng-switch-when=\"month\"></mwl-calendar-month><mwl-calendar-week custom-data=\"customData\" events=\"events\" current-day=\"currentDay\" on-event-click=\"onEventClick\" on-event-drop=\"onEventDrop\" day-view-start=\"dayViewStart\" day-view-end=\"dayViewEnd\" day-view-split=\"dayViewSplit || 30\" ng-switch-when=\"week\"></mwl-calendar-week><mwl-calendar-day custom-data=\"customData\" events=\"events\" current-day=\"currentDay\" on-event-click=\"onEventClick\" on-event-drop=\"onEventDrop\" day-view-start=\"dayViewStart\" day-view-end=\"dayViewEnd\" day-view-split=\"dayViewSplit || 30\" ng-switch-when=\"day\"></mwl-calendar-day></div>');\n            $templateCache.put('src/templates/calendarDayView.html', '<div class=\"cal-day-box\"><div class=\"row-fluid clearfix cal-row-head\"><div class=\"span1 col-xs-1 cal-cell\" ng-bind=\"vm.calendarConfig.i18nStrings.timeLabel\"></div><div class=\"span11 col-xs-11 cal-cell\" ng-bind=\"vm.calendarConfig.i18nStrings.eventsLabel\"></div></div><div class=\"cal-day-panel clearfix\" ng-style=\"{height: vm.dayViewHeight + \\'px\\'}\"><mwl-calendar-hour-list day-view-start=\"dayViewStart\" day-view-end=\"dayViewEnd\" day-view-split=\"dayViewSplit\"></mwl-calendar-hour-list><div class=\"pull-left day-event day-highlight\" ng-class=\"\\'dh-event-\\' + event.type + \\' \\' + event.cssClass\" ng-repeat=\"event in vm.view track by event.$id\" ng-style=\"{top: event.top + \\'px\\', left: event.left + 60 + \\'px\\', height: event.height + \\'px\\'}\" mwl-draggable=\"event.editable !== false\" axis=\"y\" snap-grid=\"{y: 30}\" on-drag=\"vm.tempTimeChanged(event, y)\" on-drag-end=\"vm.timeChanged(event, y)\"><span class=\"cal-hours\"><span ng-show=\"event.top == 0\"><span ng-bind=\"(event.tempStartsAt || event.startsAt) | calendarDate:\\'day\\':true\"></span>,</span> <span ng-bind=\"(event.tempStartsAt || event.startsAt) | calendarDate:\\'time\\':true\"></span></span> <a href=\"javascript:;\" class=\"event-item\" ng-click=\"onEventClick({calendarEvent: event})\"><span ng-bind-html=\"vm.$sce.trustAsHtml(event.title) | calendarTruncateEventTitle:20:event.height\"></span></a></div></div></div>');\n            $templateCache.put('src/templates/calendarHourList.html', '<div class=\"cal-day-panel-hour\"><div class=\"cal-day-hour\" ng-repeat=\"hour in vm.hours track by $index\"><div class=\"row-fluid cal-day-hour-part\"><div class=\"span1 col-xs-1\"><strong ng-bind=\"hour.label\"></strong></div><div class=\"span11 col-xs-11\"></div></div><div class=\"row-fluid cal-day-hour-part\"><div class=\"span1 col-xs-1\"></div><div class=\"span11 col-xs-11\"></div></div><div class=\"row-fluid cal-day-hour-part\" ng-show=\"vm.dayViewSplit < 30\"><div class=\"span1 col-xs-1\"></div><div class=\"span11 col-xs-11\"></div></div><div class=\"row-fluid cal-day-hour-part\" ng-show=\"vm.dayViewSplit < 30\"><div class=\"span1 col-xs-1\"></div><div class=\"span11 col-xs-11\"></div></div><div class=\"row-fluid cal-day-hour-part\" ng-show=\"vm.dayViewSplit < 15\"><div class=\"span1 col-xs-1\"></div><div class=\"span11 col-xs-11\"></div></div><div class=\"row-fluid cal-day-hour-part\" ng-show=\"vm.dayViewSplit < 15\"><div class=\"span1 col-xs-1\"></div><div class=\"span11 col-xs-11\"></div></div></div></div>');\n            $templateCache.put('src/templates/calendarMonthDay.html', '<div mwl-droppable on-drop=\"vm.handleEventDrop(dropData.event, day.date)\" class=\"cal-month-day\" ng-class=\"{\\n            \\'cal-day-outmonth\\': !day.inMonth,\\n            \\'cal-day-inmonth\\': day.inMonth,\\n            \\'cal-day-weekend\\': day.isWeekend,\\n            \\'cal-day-past\\': day.isPast,\\n            \\'cal-day-today\\': day.isToday,\\n            \\'cal-day-future\\': day.isFuture\\n          }\"><small class=\"cal-events-num badge badge-important pull-left\" ng-bind=\"day.badgeTotal\" ng-if=\"day.badgeTotal > 0\"></small> <span class=\"pull-right\" data-cal-date ng-click=\"vm.calendarCtrl.drillDown(day.date)\" ng-bind=\"day.label\"></span><div class=\"cal-day-tick\" ng-show=\"dayIndex === vm.openDayIndex\"><i class=\"glyphicon glyphicon-chevron-up\"></i> <i class=\"fa fa-chevron-up\"></i></div><div ng-include=\"\\'src/templates/calendarMonthEventsList.html\\'\"></div></div>');\n            $templateCache.put('src/templates/calendarMonthEventsList.html', '<div class=\"events-list\" ng-show=\"day.events.length > 0\"><a ng-repeat=\"event in day.events | orderBy:\\'startsAt\\' track by event.$id\" href=\"javascript:;\" ng-click=\"onEventClick({calendarEvent: event})\" class=\"pull-left event\" ng-class=\"\\'event-\\' + event.type + \\' \\' + event.cssClass\" ng-mouseenter=\"vm.highlightEvent(event, true)\" ng-mouseleave=\"vm.highlightEvent(event, false)\" tooltip-append-to-body=\"true\" tooltip-html-unsafe=\"{{ (event.startsAt | calendarDate:\\'time\\':true) + \\' - \\' + event.title }}\" mwl-draggable=\"event.editable !== false\" drop-data=\"{event: event}\"></a></div>');\n            $templateCache.put('src/templates/calendarMonthView.html', '<div class=\"cal-row-fluid cal-row-head\"><div class=\"cal-cell1\" ng-repeat=\"day in vm.weekDays track by $index\" ng-bind=\"day\"></div></div><div class=\"cal-month-box\"><div ng-repeat=\"rowOffset in vm.monthOffsets track by rowOffset\"><div class=\"cal-row-fluid cal-before-eventlist\"><div ng-repeat=\"day in vm.view | calendarLimitTo:7:rowOffset track by $index\" ng-init=\"dayIndex = vm.view.indexOf(day)\" class=\"cal-cell1 cal-cell {{ day.highlightClass }}\" ng-click=\"vm.dayClicked(day)\" ng-class=\"{pointer: true}\"><div ng-include=\"\\'src/templates/calendarMonthDay.html\\'\"></div></div></div><mwl-calendar-slide-box is-open=\"vm.openRowIndex === $index\" custom-data=\"customData\" day=\"vm.view[vm.openDayIndex]\" events=\"vm.view[vm.openDayIndex].events\" on-event-click=\"onEventClick\" edit-event-html=\"editEventHtml\" on-edit-event-click=\"onEditEventClick\" delete-event-html=\"deleteEventHtml\" on-delete-event-click=\"onDeleteEventClick\"></mwl-calendar-slide-box></div></div>');\n            $templateCache.put('src/templates/calendarSlideBox.html', '');\n            $templateCache.put('src/templates/calendarWeekView.html', '<div class=\"cal-week-box\" ng-class=\"{\\'cal-day-box\\': vm.showTimes}\"><div class=\"cal-row-fluid cal-row-head\"><div class=\"cal-cell1\" ng-repeat=\"day in vm.view.days track by $index\" ng-class=\"{\\n        \\'cal-day-weekend\\': day.isWeekend,\\n        \\'cal-day-past\\': day.isPast,\\n        \\'cal-day-today\\': day.isToday,\\n        \\'cal-day-future\\': day.isFuture}\" mwl-element-dimensions=\"vm.dayColumnDimensions\"><span ng-bind=\"day.weekDayLabel\"></span><br><small><span data-cal-date ng-click=\"vm.calendarCtrl.drillDown(day.date)\" class=\"pointer\" ng-bind=\"day.dayLabel\"></span></small></div></div><div class=\"cal-day-panel clearfix\" ng-style=\"{height: vm.showTimes ? (vm.dayViewHeight + \\'px\\') : \\'auto\\'}\"><mwl-calendar-hour-list day-view-start=\"dayViewStart\" day-view-end=\"dayViewEnd\" day-view-split=\"dayViewSplit\" ng-if=\"vm.showTimes\"></mwl-calendar-hour-list><div class=\"row\"><div class=\"col-xs-12\"><div class=\"cal-row-fluid\" ng-repeat=\"event in vm.view.events track by event.$id\"><div ng-class=\"\\'cal-cell\\' + (vm.showTimes ? 1 : event.daySpan) + \\' cal-offset\\' + event.dayOffset + \\' day-highlight dh-event-\\' + event.type + \\' \\' + event.cssClass\" ng-style=\"{top: (event.top + 2) + \\'px\\', position: vm.showTimes ? \\'absolute\\' : \\'inherit\\'}\" data-event-class mwl-draggable=\"event.editable !== false\" axis=\"vm.showTimes ? \\'xy\\' : \\'x\\'\" snap-grid=\"vm.showTimes ? {x: vm.dayColumnDimensions.width, y: 30} : {x: vm.dayColumnDimensions.width}\" on-drag=\"vm.tempTimeChanged(event, y)\" on-drag-end=\"vm.weekDragged(event, x, y)\"><strong ng-bind=\"(event.tempStartsAt || event.startsAt) | calendarDate:\\'time\\':true\" ng-show=\"vm.showTimes\"></strong> <a href=\"javascript:;\" ng-click=\"onEventClick({calendarEvent: event})\" class=\"event-item\" ng-bind-html=\"vm.$sce.trustAsHtml(event.title)\" tooltip-html-unsafe=\"{{ event.title }}\" tooltip-placement=\"left\" tooltip-append-to-body=\"true\"></a></div></div></div></div></div></div>');\n            $templateCache.put('src/templates/calendarYearView.html', '<div class=\"cal-year-box\"><div ng-repeat=\"rowOffset in [0, 4, 8] track by rowOffset\"><div class=\"row cal-before-eventlist\"><div class=\"span3 col-md-3 col-xs-6 cal-cell\" ng-repeat=\"month in vm.view | calendarLimitTo:4:rowOffset track by $index\" ng-init=\"monthIndex = vm.view.indexOf(month)\" ng-click=\"vm.monthClicked(month)\" ng-class=\"{pointer: month.events.length > 0, \\'cal-day-today\\': month.isToday}\" mwl-droppable on-drop=\"vm.handleEventDrop(dropData.event, month.date)\"><span class=\"pull-right\" data-cal-date ng-click=\"vm.calendarCtrl.drillDown(month.date)\" ng-bind=\"month.label\"></span> <small class=\"cal-events-num badge badge-important pull-left\" ng-show=\"month.badgeTotal > 0\" ng-bind=\"month.badgeTotal\"></small><div class=\"cal-day-tick\" ng-show=\"monthIndex === vm.openMonthIndex && vm.view[vm.openMonthIndex].events.length > 0\"><i class=\"glyphicon glyphicon-chevron-up\"></i> <i class=\"fa fa-chevron-up\"></i></div></div></div><mwl-calendar-slide-box is-open=\"vm.openRowIndex === $index && vm.view[vm.openMonthIndex].events.length > 0\" events=\"vm.view[vm.openMonthIndex].events\" on-event-click=\"onEventClick\" edit-event-html=\"editEventHtml\" on-edit-event-click=\"onEditEventClick\" delete-event-html=\"deleteEventHtml\" on-delete-event-click=\"onDeleteEventClick\"></mwl-calendar-slide-box></div></div>');\n        }\n    ]);\n    'use strict';\n    angular.module('mwl.calendar').constant('moment', window.moment);\n    //eslint-disable-line angular/ng_window_service\n    'use strict';\n    angular.module('mwl.calendar').constant('interact', window.interact);\n    //eslint-disable-line angular/ng_window_service\n    'use strict';\n    angular.module('mwl.calendar').factory('calendarTitle', [\n        'moment',\n        'calendarConfig',\n        'calendarHelper',\n        function (moment, calendarConfig, calendarHelper) {\n            function day(currentDay) {\n                return calendarHelper.formatDate(currentDay, calendarConfig.titleFormats.day);\n            }\n            function week(currentDay) {\n                var weekTitleLabel = calendarConfig.titleFormats.week;\n                return weekTitleLabel.replace('{week}', moment(currentDay).week()).replace('{year}', moment(currentDay).format('YYYY'));\n            }\n            function month(currentDay) {\n                return calendarHelper.formatDate(currentDay, calendarConfig.titleFormats.month);\n            }\n            function year(currentDay) {\n                return calendarHelper.formatDate(currentDay, calendarConfig.titleFormats.year);\n            }\n            return {\n                day: day,\n                week: week,\n                month: month,\n                year: year\n            };\n        }\n    ]);\n    'use strict';\n    angular.module('mwl.calendar').factory('calendarHelper', [\n        'dateFilter',\n        'moment',\n        'calendarConfig',\n        function (dateFilter, moment, calendarConfig) {\n            function formatDate(date, format) {\n                if (calendarConfig.dateFormatter === 'angular') {\n                    return dateFilter(moment(date).toDate(), format);\n                } else if (calendarConfig.dateFormatter === 'moment') {\n                    return moment(date).format(format);\n                }\n            }\n            function adjustEndDateFromStartDiff(oldStart, newStart, oldEnd) {\n                if (!oldEnd) {\n                    return oldEnd;\n                }\n                var diffInSeconds = moment(newStart).diff(moment(oldStart));\n                return moment(oldEnd).add(diffInSeconds);\n            }\n            function eventIsInPeriod(event, periodStart, periodEnd) {\n                var eventStart = moment(event.startsAt);\n                var eventEnd = moment(event.endsAt || event.startsAt);\n                periodStart = moment(periodStart);\n                periodEnd = moment(periodEnd);\n                if (angular.isDefined(event.recursOn)) {\n                    switch (event.recursOn) {\n                    case 'year':\n                        eventStart.set({ year: periodStart.year() });\n                        break;\n                    case 'month':\n                        eventStart.set({\n                            year: periodStart.year(),\n                            month: periodStart.month()\n                        });\n                        break;\n                    default:\n                        throw new Error('Invalid value (' + event.recursOn + ') given for recurs on. Can only be year, month or week.');\n                    }\n                    eventEnd = adjustEndDateFromStartDiff(event.startsAt, eventStart, eventEnd);\n                }\n                return eventStart.isAfter(periodStart) && eventStart.isBefore(periodEnd) || eventEnd.isAfter(periodStart) && eventEnd.isBefore(periodEnd) || eventStart.isBefore(periodStart) && eventEnd.isAfter(periodEnd) || eventStart.isSame(periodStart) || eventEnd.isSame(periodEnd);\n            }\n            function filterEventsInPeriod(events, startPeriod, endPeriod) {\n                return events.filter(function (event) {\n                    return eventIsInPeriod(event, startPeriod, endPeriod);\n                });\n            }\n            function getEventsInPeriod(calendarDate, period, allEvents) {\n                var startPeriod = moment(calendarDate).startOf(period);\n                var endPeriod = moment(calendarDate).endOf(period);\n                return filterEventsInPeriod(allEvents, startPeriod, endPeriod);\n            }\n            function getBadgeTotal(events) {\n                return events.filter(function (event) {\n                    return event.incrementsBadgeTotal !== false;\n                }).length;\n            }\n            function getWeekDayNames() {\n                var weekdays = [];\n                var count = 0;\n                while (count < 7) {\n                    weekdays.push(formatDate(moment().weekday(count++), calendarConfig.dateFormats.weekDay));\n                }\n                return weekdays;\n            }\n            function getYearView(events, currentDay) {\n                var view = [];\n                var eventsInPeriod = getEventsInPeriod(currentDay, 'year', events);\n                var month = moment(currentDay).startOf('year');\n                var count = 0;\n                while (count < 12) {\n                    var startPeriod = month.clone();\n                    var endPeriod = startPeriod.clone().endOf('month');\n                    var periodEvents = filterEventsInPeriod(eventsInPeriod, startPeriod, endPeriod);\n                    view.push({\n                        label: formatDate(startPeriod, calendarConfig.dateFormats.month),\n                        isToday: startPeriod.isSame(moment().startOf('month')),\n                        events: periodEvents,\n                        date: startPeriod,\n                        badgeTotal: getBadgeTotal(periodEvents)\n                    });\n                    month.add(1, 'month');\n                    count++;\n                }\n                return view;\n            }\n            function getMonthView(events, currentDay) {\n                var startOfMonth = moment(currentDay).startOf('month');\n                var day = startOfMonth.clone().startOf('week');\n                var endOfMonthView = moment(currentDay).endOf('month').endOf('week');\n                var eventsInPeriod;\n                if (calendarConfig.displayAllMonthEvents) {\n                    eventsInPeriod = filterEventsInPeriod(events, day, endOfMonthView);\n                } else {\n                    eventsInPeriod = filterEventsInPeriod(events, startOfMonth, startOfMonth.clone().endOf('month'));\n                }\n                var view = [];\n                var today = moment().startOf('day');\n                while (day.isBefore(endOfMonthView)) {\n                    var inMonth = day.month() === moment(currentDay).month();\n                    var monthEvents = [];\n                    if (inMonth || calendarConfig.displayAllMonthEvents) {\n                        monthEvents = filterEventsInPeriod(eventsInPeriod, day, day.clone().endOf('day'));\n                    }\n                    view.push({\n                        label: day.date(),\n                        date: day.clone(),\n                        inMonth: inMonth,\n                        isPast: today.isAfter(day),\n                        isToday: today.isSame(day),\n                        isFuture: today.isBefore(day),\n                        isWeekend: [\n                            0,\n                            6\n                        ].indexOf(day.day()) > -1,\n                        events: monthEvents,\n                        badgeTotal: getBadgeTotal(monthEvents)\n                    });\n                    day.add(1, 'day');\n                }\n                return view;\n            }\n            function getWeekView(events, currentDay) {\n                var startOfWeek = moment(currentDay).startOf('week');\n                var endOfWeek = moment(currentDay).endOf('week');\n                var dayCounter = startOfWeek.clone();\n                var days = [];\n                var today = moment().startOf('day');\n                while (days.length < 7) {\n                    days.push({\n                        weekDayLabel: formatDate(dayCounter, calendarConfig.dateFormats.weekDay),\n                        date: dayCounter.clone(),\n                        dayLabel: formatDate(dayCounter, calendarConfig.dateFormats.day),\n                        isPast: dayCounter.isBefore(today),\n                        isToday: dayCounter.isSame(today),\n                        isFuture: dayCounter.isAfter(today),\n                        isWeekend: [\n                            0,\n                            6\n                        ].indexOf(dayCounter.day()) > -1\n                    });\n                    dayCounter.add(1, 'day');\n                }\n                var eventsSorted = filterEventsInPeriod(events, startOfWeek, endOfWeek).map(function (event) {\n                    var eventStart = moment(event.startsAt).startOf('day');\n                    var eventEnd = moment(event.endsAt || event.startsAt).startOf('day');\n                    var weekViewStart = moment(startOfWeek).startOf('day');\n                    var weekViewEnd = moment(endOfWeek).startOf('day');\n                    var offset, span;\n                    if (eventStart.isBefore(weekViewStart) || eventStart.isSame(weekViewStart)) {\n                        offset = 0;\n                    } else {\n                        offset = eventStart.diff(weekViewStart, 'days');\n                    }\n                    if (eventEnd.isAfter(weekViewEnd)) {\n                        eventEnd = weekViewEnd;\n                    }\n                    if (eventStart.isBefore(weekViewStart)) {\n                        eventStart = weekViewStart;\n                    }\n                    span = moment(eventEnd).diff(eventStart, 'days') + 1;\n                    event.daySpan = span;\n                    event.dayOffset = offset;\n                    return event;\n                });\n                return {\n                    days: days,\n                    events: eventsSorted\n                };\n            }\n            function getDayView(events, currentDay, dayViewStart, dayViewEnd, dayViewSplit) {\n                var dayStartHour = moment(dayViewStart || '00:00', 'HH:mm').hours();\n                var dayEndHour = moment(dayViewEnd || '23:00', 'HH:mm').hours();\n                var hourHeight = 60 / dayViewSplit * 30;\n                var calendarStart = moment(currentDay).startOf('day').add(dayStartHour, 'hours');\n                var calendarEnd = moment(currentDay).startOf('day').add(dayEndHour, 'hours');\n                var calendarHeight = (dayEndHour - dayStartHour + 1) * hourHeight;\n                var hourHeightMultiplier = hourHeight / 60;\n                var buckets = [];\n                var eventsInPeriod = filterEventsInPeriod(events, moment(currentDay).startOf('day').toDate(), moment(currentDay).endOf('day').toDate());\n                return eventsInPeriod.map(function (event) {\n                    if (moment(event.startsAt).isBefore(calendarStart)) {\n                        event.top = 0;\n                    } else {\n                        event.top = moment(event.startsAt).startOf('minute').diff(calendarStart.startOf('minute'), 'minutes') * hourHeightMultiplier - 2;\n                    }\n                    if (moment(event.endsAt || event.startsAt).isAfter(calendarEnd)) {\n                        event.height = calendarHeight - event.top;\n                    } else {\n                        var diffStart = event.startsAt;\n                        if (moment(event.startsAt).isBefore(calendarStart)) {\n                            diffStart = calendarStart.toDate();\n                        }\n                        if (!event.endsAt) {\n                            event.height = 30;\n                        } else {\n                            event.height = moment(event.endsAt || event.startsAt).diff(diffStart, 'minutes') * hourHeightMultiplier;\n                        }\n                    }\n                    if (event.top - event.height > calendarHeight) {\n                        event.height = 0;\n                    }\n                    event.left = 0;\n                    return event;\n                }).filter(function (event) {\n                    return event.height > 0;\n                }).map(function (event) {\n                    var cannotFitInABucket = true;\n                    buckets.forEach(function (bucket, bucketIndex) {\n                        var canFitInThisBucket = true;\n                        bucket.forEach(function (bucketItem) {\n                            if (eventIsInPeriod(event, bucketItem.startsAt, bucketItem.endsAt || bucketItem.startsAt) || eventIsInPeriod(bucketItem, event.startsAt, event.endsAt || event.startsAt)) {\n                                canFitInThisBucket = false;\n                            }\n                        });\n                        if (canFitInThisBucket && cannotFitInABucket) {\n                            cannotFitInABucket = false;\n                            event.left = bucketIndex * 150;\n                            buckets[bucketIndex].push(event);\n                        }\n                    });\n                    if (cannotFitInABucket) {\n                        event.left = buckets.length * 150;\n                        buckets.push([event]);\n                    }\n                    return event;\n                });\n            }\n            function getWeekViewWithTimes(events, currentDay, dayViewStart, dayViewEnd, dayViewSplit) {\n                var weekView = getWeekView(events, currentDay);\n                var newEvents = [];\n                weekView.days.forEach(function (day) {\n                    var dayEvents = weekView.events.filter(function (event) {\n                        return moment(event.startsAt).startOf('day').isSame(moment(day.date).startOf('day'));\n                    });\n                    var newDayEvents = getDayView(dayEvents, day.date, dayViewStart, dayViewEnd, dayViewSplit);\n                    newEvents = newEvents.concat(newDayEvents);\n                });\n                weekView.events = newEvents;\n                return weekView;\n            }\n            function getDayViewHeight(dayViewStart, dayViewEnd, dayViewSplit) {\n                var dayViewStartM = moment(dayViewStart || '00:00', 'HH:mm');\n                var dayViewEndM = moment(dayViewEnd || '23:00', 'HH:mm');\n                var hourHeight = 60 / dayViewSplit * 30;\n                return (dayViewEndM.diff(dayViewStartM, 'hours') + 1) * hourHeight + 2;\n            }\n            return {\n                getWeekDayNames: getWeekDayNames,\n                getYearView: getYearView,\n                getMonthView: getMonthView,\n                getWeekView: getWeekView,\n                getDayView: getDayView,\n                getWeekViewWithTimes: getWeekViewWithTimes,\n                getDayViewHeight: getDayViewHeight,\n                adjustEndDateFromStartDiff: adjustEndDateFromStartDiff,\n                formatDate: formatDate,\n                eventIsInPeriod: eventIsInPeriod    //expose for testing only\n            };\n        }\n    ]);\n    'use strict';\n    angular.module('mwl.calendar').service('calendarDebounce', [\n        '$timeout',\n        function ($timeout) {\n            function debounce(func, wait, immediate) {\n                var timeout;\n                return function () {\n                    var context = this, args = arguments;\n                    function later() {\n                        timeout = null;\n                        if (!immediate) {\n                            func.apply(context, args);\n                        }\n                    }\n                    var callNow = immediate && !timeout;\n                    $timeout.cancel(timeout);\n                    timeout = $timeout(later, wait);\n                    if (callNow) {\n                        func.apply(context, args);\n                    }\n                };\n            }\n            return debounce;\n        }\n    ]);\n    'use strict';\n    angular.module('mwl.calendar').provider('calendarConfig', function () {\n        var defaultFormats = {\n            angular: {\n                date: {\n                    hour: 'ha',\n                    day: 'd MMM',\n                    month: 'MMMM',\n                    weekDay: 'EEEE',\n                    time: 'HH:mm',\n                    datetime: 'MMM d, h:mm a'\n                },\n                title: {\n                    day: 'EEEE d MMMM, yyyy',\n                    week: 'Week {week} of {year}',\n                    month: 'MMMM yyyy',\n                    year: 'yyyy'\n                }\n            },\n            moment: {\n                date: {\n                    hour: 'ha',\n                    day: 'D MMM',\n                    month: 'MMMM',\n                    weekDay: 'dddd',\n                    time: 'HH:mm',\n                    datetime: 'MMM D, h:mm a'\n                },\n                title: {\n                    day: 'dddd D MMMM, YYYY',\n                    week: 'Week {week} of {year}',\n                    month: 'MMMM YYYY',\n                    year: 'YYYY'\n                }\n            }\n        };\n        var dateFormatter = 'angular';\n        var defaultDateFormats = angular.copy(defaultFormats[dateFormatter].date);\n        var defaultTitleFormats = angular.copy(defaultFormats[dateFormatter].title);\n        var showTimesOnWeekView = false;\n        var i18nStrings = {\n            eventsLabel: 'Events',\n            timeLabel: 'Time'\n        };\n        var displayAllMonthEvents = false;\n        var configProvider = this;\n        configProvider.setDateFormats = function (formats) {\n            angular.extend(defaultDateFormats, formats);\n            return configProvider;\n        };\n        configProvider.setTitleFormats = function (formats) {\n            angular.extend(defaultTitleFormats, formats);\n            return configProvider;\n        };\n        configProvider.setI18nStrings = function (strings) {\n            angular.extend(i18nStrings, strings);\n            return configProvider;\n        };\n        configProvider.setDisplayAllMonthEvents = function (value) {\n            displayAllMonthEvents = value;\n            return configProvider;\n        };\n        configProvider.setDateFormatter = function (value) {\n            if ([\n                    'angular',\n                    'moment'\n                ].indexOf(value) === -1) {\n                throw new Error('Invalid date formatter. Allowed types are angular and moment.');\n            }\n            dateFormatter = value;\n            defaultDateFormats = angular.copy(defaultFormats[dateFormatter].date);\n            defaultTitleFormats = angular.copy(defaultFormats[dateFormatter].title);\n            return configProvider;\n        };\n        configProvider.showTimesOnWeekView = function (value) {\n            showTimesOnWeekView = value;\n            //experimental, and ignores the event end date\n            return configProvider;\n        };\n        configProvider.$get = function () {\n            return {\n                dateFormats: defaultDateFormats,\n                titleFormats: defaultTitleFormats,\n                i18nStrings: i18nStrings,\n                displayAllMonthEvents: displayAllMonthEvents,\n                dateFormatter: dateFormatter,\n                showTimesOnWeekView: showTimesOnWeekView\n            };\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').filter('calendarTruncateEventTitle', function () {\n        return function (string, length, boxHeight) {\n            if (!string) {\n                return '';\n            }\n            //Only truncate if if actually needs truncating\n            if (string.length >= length && string.length / 20 > boxHeight / 30) {\n                return string.substr(0, length) + '...';\n            } else {\n                return string;\n            }\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').filter('calendarLimitTo', [\n        'limitToFilter',\n        function (limitToFilter) {\n            if (angular.version.minor >= 4) {\n                //1.4+ supports the begin attribute\n                return limitToFilter;\n            }\n            //Copied from the angular source. Only 1.4 has the begin functionality.\n            return function (input, limit, begin) {\n                if (Math.abs(Number(limit)) === Infinity) {\n                    limit = Number(limit);\n                } else {\n                    limit = parseInt(limit);\n                }\n                if (isNaN(limit)) {\n                    return input;\n                }\n                if (angular.isNumber(input)) {\n                    input = input.toString();\n                }\n                if (!angular.isArray(input) && !angular.isString(input)) {\n                    return input;\n                }\n                begin = !begin || isNaN(begin) ? 0 : parseInt(begin);\n                begin = begin < 0 && begin >= -input.length ? input.length + begin : begin;\n                if (limit >= 0) {\n                    return input.slice(begin, begin + limit);\n                } else if (begin === 0) {\n                    return input.slice(limit, input.length);\n                } else {\n                    return input.slice(Math.max(0, begin + limit), begin);\n                }\n            };\n        }\n    ]);\n    'use strict';\n    angular.module('mwl.calendar').filter('calendarDate', [\n        'calendarHelper',\n        'calendarConfig',\n        function (calendarHelper, calendarConfig) {\n            function calendarDate(date, format, getFromConfig) {\n                if (getFromConfig === true) {\n                    format = calendarConfig.dateFormats[format];\n                }\n                return calendarHelper.formatDate(date, format);\n            }\n            calendarDate.$stateful = true;\n            return calendarDate;\n        }\n    ]);\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlElementDimensionsCtrl', [\n        '$element',\n        '$scope',\n        '$parse',\n        '$attrs',\n        function ($element, $scope, $parse, $attrs) {\n            $parse($attrs.mwlElementDimensions).assign($scope, {\n                width: $element[0].offsetWidth,\n                height: $element[0].offsetHeight\n            });\n        }\n    ]).directive('mwlElementDimensions', function () {\n        return {\n            restrict: 'A',\n            controller: 'MwlElementDimensionsCtrl'\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlDroppableCtrl', [\n        '$element',\n        '$scope',\n        '$parse',\n        '$attrs',\n        'interact',\n        function ($element, $scope, $parse, $attrs, interact) {\n            if (!interact) {\n                return;\n            }\n            interact($element[0]).dropzone({\n                ondragenter: function (event) {\n                    angular.element(event.target).addClass('drop-active');\n                },\n                ondragleave: function (event) {\n                    angular.element(event.target).removeClass('drop-active');\n                },\n                ondropdeactivate: function (event) {\n                    angular.element(event.target).removeClass('drop-active');\n                },\n                ondrop: function (event) {\n                    if (event.relatedTarget.dropData) {\n                        $parse($attrs.onDrop)($scope, { dropData: event.relatedTarget.dropData });\n                        $scope.$apply();\n                    }\n                }\n            });\n            var unbindDestroy = $scope.$on('$destroy', function () {\n                unbindDestroy();\n                interact($element[0]).unset();\n            });\n        }\n    ]).directive('mwlDroppable', function () {\n        return {\n            restrict: 'A',\n            controller: 'MwlDroppableCtrl'\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlDraggableCtrl', [\n        '$element',\n        '$scope',\n        '$window',\n        '$parse',\n        '$attrs',\n        '$timeout',\n        'interact',\n        function ($element, $scope, $window, $parse, $attrs, $timeout, interact) {\n            if (!interact) {\n                return;\n            }\n            var snap, snapGridDimensions;\n            if ($attrs.snapGrid) {\n                snapGridDimensions = $parse($attrs.snapGrid)($scope);\n                snap = { targets: [interact.createSnapGrid(snapGridDimensions)] };\n            }\n            function translateElement(elm, transformValue) {\n                return elm.css('transform', transformValue).css('-ms-transform', transformValue).css('-webkit-transform', transformValue);\n            }\n            function canDrag() {\n                return $parse($attrs.mwlDraggable)($scope);\n            }\n            function getUnitsMoved(x, y, gridDimensions) {\n                var result = {\n                    x: x,\n                    y: y\n                };\n                if (gridDimensions && gridDimensions.x) {\n                    result.x /= gridDimensions.x;\n                }\n                if (gridDimensions && gridDimensions.y) {\n                    result.y /= gridDimensions.y;\n                }\n                return result;\n            }\n            interact($element[0]).draggable({\n                snap: snap,\n                onstart: function (event) {\n                    if (canDrag()) {\n                        angular.element(event.target).addClass('dragging-active');\n                        event.target.dropData = $parse($attrs.dropData)($scope);\n                        event.target.style.pointerEvents = 'none';\n                        if ($attrs.onDragStart) {\n                            $parse($attrs.onDragStart)($scope);\n                            $scope.$apply();\n                        }\n                    }\n                },\n                onmove: function (event) {\n                    if (canDrag()) {\n                        var elm = angular.element(event.target);\n                        var x = (parseFloat(elm.attr('data-x')) || 0) + (event.dx || 0);\n                        var y = (parseFloat(elm.attr('data-y')) || 0) + (event.dy || 0);\n                        switch ($parse($attrs.axis)($scope)) {\n                        case 'x':\n                            y = 0;\n                            break;\n                        case 'y':\n                            x = 0;\n                            break;\n                        default:\n                        }\n                        if ($window.getComputedStyle(elm[0]).position === 'static') {\n                            elm.css('position', 'relative');\n                        }\n                        translateElement(elm, 'translate(' + x + 'px, ' + y + 'px)').css('z-index', 1000).attr('data-x', x).attr('data-y', y);\n                        if ($attrs.onDrag) {\n                            $parse($attrs.onDrag)($scope, getUnitsMoved(x, y, snapGridDimensions));\n                            $scope.$apply();\n                        }\n                    }\n                },\n                onend: function (event) {\n                    if (canDrag()) {\n                        var elm = angular.element(event.target);\n                        var x = elm.attr('data-x');\n                        var y = elm.attr('data-y');\n                        event.target.style.pointerEvents = 'auto';\n                        if ($attrs.onDragEnd) {\n                            $parse($attrs.onDragEnd)($scope, getUnitsMoved(x, y, snapGridDimensions));\n                            $scope.$apply();\n                        }\n                        $timeout(function () {\n                            translateElement(elm, null).removeAttr('data-x').removeAttr('data-y').removeClass('dragging-active');\n                        }, 50);\n                    }\n                }\n            });\n            var unbindDestroy = $scope.$on('$destroy', function () {\n                unbindDestroy();\n                interact($element[0]).unset();\n            });\n        }\n    ]).directive('mwlDraggable', function () {\n        return {\n            restrict: 'A',\n            controller: 'MwlDraggableCtrl'\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlDateModifierCtrl', [\n        '$element',\n        '$attrs',\n        '$scope',\n        'moment',\n        function ($element, $attrs, $scope, moment) {\n            function onClick() {\n                if (angular.isDefined($attrs.setToToday)) {\n                    $scope.date = new Date();\n                } else if (angular.isDefined($attrs.increment)) {\n                    $scope.date = moment($scope.date).add(1, $scope.increment).toDate();\n                } else if (angular.isDefined($attrs.decrement)) {\n                    $scope.date = moment($scope.date).subtract(1, $scope.decrement).toDate();\n                }\n                $scope.$apply();\n            }\n            $element.bind('click', onClick);\n            $scope.$on('$destroy', function () {\n                $element.unbind('click', onClick);\n            });\n        }\n    ]).directive('mwlDateModifier', function () {\n        return {\n            restrict: 'A',\n            controller: 'MwlDateModifierCtrl',\n            scope: {\n                date: '=',\n                increment: '=',\n                decrement: '='\n            }\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlCollapseFallbackCtrl', [\n        '$scope',\n        '$attrs',\n        '$element',\n        function ($scope, $attrs, $element) {\n            var unbindWatcher = $scope.$watch($attrs.mwlCollapseFallback, function (shouldCollapse) {\n                if (shouldCollapse) {\n                    $element.addClass('ng-hide');\n                } else {\n                    $element.removeClass('ng-hide');\n                }\n            });\n            var unbindDestroy = $scope.$on('$destroy', function () {\n                unbindDestroy();\n                unbindWatcher();\n            });\n        }\n    ]).directive('mwlCollapseFallback', [\n        '$injector',\n        function ($injector) {\n            if ($injector.has('collapseDirective')) {\n                return {};\n            }\n            return {\n                restrict: 'A',\n                controller: 'MwlCollapseFallbackCtrl'\n            };\n        }\n    ]);\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlCalendarYearCtrl', [\n        '$scope',\n        'moment',\n        'calendarHelper',\n        function ($scope, moment, calendarHelper) {\n            var vm = this;\n            var firstRun = true;\n            $scope.$on('calendar.refreshView', function () {\n                vm.view = calendarHelper.getYearView($scope.events, $scope.currentDay);\n                //Auto open the calendar to the current day if set\n                if ($scope.autoOpen && firstRun) {\n                    firstRun = false;\n                    vm.view.forEach(function (month) {\n                        if (moment($scope.currentDay).startOf('month').isSame(month.date)) {\n                            vm.monthClicked(month, true);\n                        }\n                    });\n                }\n            });\n            vm.monthClicked = function (month, monthClickedFirstRun) {\n                if (!monthClickedFirstRun) {\n                    $scope.onTimespanClick({ calendarDate: month.date.toDate() });\n                }\n                vm.openRowIndex = null;\n                var monthIndex = vm.view.indexOf(month);\n                if (monthIndex === vm.openMonthIndex) {\n                    //the month has been clicked and is already open\n                    vm.openMonthIndex = null;    //close the open month\n                } else {\n                    vm.openMonthIndex = monthIndex;\n                    vm.openRowIndex = Math.floor(monthIndex / 4);\n                }\n            };\n            vm.handleEventDrop = function (event, newMonthDate) {\n                var newStart = moment(event.startsAt).month(moment(newMonthDate).month());\n                var newEnd = calendarHelper.adjustEndDateFromStartDiff(event.startsAt, newStart, event.endsAt);\n                $scope.onEventDrop({\n                    calendarEvent: event,\n                    calendarDate: newMonthDate,\n                    calendarNewEventStart: newStart.toDate(),\n                    calendarNewEventEnd: newEnd.toDate()\n                });\n            };\n        }\n    ]).directive('mwlCalendarYear', function () {\n        return {\n            templateUrl: 'src/templates/calendarYearView.html',\n            restrict: 'EA',\n            require: '^mwlCalendar',\n            scope: {\n                customData: '=',\n                events: '=',\n                currentDay: '=',\n                onEventClick: '=',\n                onEventDrop: '=',\n                onEditEventClick: '=',\n                onDeleteEventClick: '=',\n                editEventHtml: '=',\n                deleteEventHtml: '=',\n                autoOpen: '=',\n                onTimespanClick: '='\n            },\n            controller: 'MwlCalendarYearCtrl as vm',\n            link: function (scope, element, attrs, calendarCtrl) {\n                scope.vm.calendarCtrl = calendarCtrl;\n            }\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlCalendarWeekCtrl', [\n        '$scope',\n        '$sce',\n        'moment',\n        'calendarHelper',\n        'calendarConfig',\n        function ($scope, $sce, moment, calendarHelper, calendarConfig) {\n            var vm = this;\n            vm.showTimes = calendarConfig.showTimesOnWeekView;\n            vm.$sce = $sce;\n            $scope.$on('calendar.refreshView', function () {\n                vm.dayViewHeight = calendarHelper.getDayViewHeight($scope.dayViewStart, $scope.dayViewEnd, $scope.dayViewSplit);\n                if (vm.showTimes) {\n                    vm.view = calendarHelper.getWeekViewWithTimes($scope.events, $scope.currentDay, $scope.dayViewStart, $scope.dayViewEnd, $scope.dayViewSplit);\n                } else {\n                    vm.view = calendarHelper.getWeekView($scope.events, $scope.currentDay);\n                }\n            });\n            vm.weekDragged = function (event, daysDiff, minuteChunksMoved) {\n                var newStart = moment(event.startsAt).add(daysDiff, 'days');\n                var newEnd = moment(event.endsAt).add(daysDiff, 'days');\n                if (minuteChunksMoved) {\n                    var minutesDiff = minuteChunksMoved * $scope.dayViewSplit;\n                    newStart = newStart.add(minutesDiff, 'minutes');\n                    newEnd = newEnd.add(minutesDiff, 'minutes');\n                }\n                delete event.tempStartsAt;\n                $scope.onEventDrop({\n                    calendarEvent: event,\n                    calendarNewEventStart: newStart.toDate(),\n                    calendarNewEventEnd: newEnd.toDate()\n                });\n            };\n            vm.tempTimeChanged = function (event, minuteChunksMoved) {\n                var minutesDiff = minuteChunksMoved * $scope.dayViewSplit;\n                event.tempStartsAt = moment(event.startsAt).add(minutesDiff, 'minutes').toDate();\n            };\n        }\n    ]).directive('mwlCalendarWeek', function () {\n        return {\n            templateUrl: 'src/templates/calendarWeekView.html',\n            restrict: 'EA',\n            require: '^mwlCalendar',\n            scope: {\n                customData: '=',\n                events: '=',\n                currentDay: '=',\n                onEventClick: '=',\n                onEventDrop: '=',\n                dayViewStart: '=',\n                dayViewEnd: '=',\n                dayViewSplit: '='\n            },\n            controller: 'MwlCalendarWeekCtrl as vm',\n            link: function (scope, element, attrs, calendarCtrl) {\n                scope.vm.calendarCtrl = calendarCtrl;\n            }\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlCalendarSlideBoxCtrl', [\n        '$scope',\n        '$sce',\n        function ($scope, $sce) {\n            var vm = this;\n            vm.$sce = $sce;\n            var unbindWatcher = $scope.$watch('isOpen', function (isOpen) {\n                vm.shouldCollapse = !isOpen;\n            });\n            var unbindDestroy = $scope.$on('$destroy', function () {\n                unbindDestroy();\n                unbindWatcher();\n            });\n        }\n    ]).directive('mwlCalendarSlideBox', function () {\n        return {\n            restrict: 'EA',\n            templateUrl: 'src/templates/calendarSlideBox.html',\n            replace: true,\n            controller: 'MwlCalendarSlideBoxCtrl as vm',\n            require: [\n                '^?mwlCalendarMonth',\n                '^?mwlCalendarYear'\n            ],\n            link: function (scope, elm, attrs, ctrls) {\n                scope.isMonthView = !!ctrls[0];\n                scope.isYearView = !!ctrls[1];\n            },\n            scope: {\n                isOpen: '=',\n                events: '=',\n                day: '=',\n                currentDay: '=',\n                onEventClick: '=',\n                editEventHtml: '=',\n                onEditEventClick: '=',\n                deleteEventHtml: '=',\n                onDeleteEventClick: '=',\n                customData: '='\n            }\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlCalendarMonthCtrl', [\n        '$scope',\n        'moment',\n        'calendarHelper',\n        function ($scope, moment, calendarHelper) {\n            var vm = this;\n            var firstRun = true;\n            $scope.$on('calendar.refreshView', function () {\n                vm.weekDays = calendarHelper.getWeekDayNames();\n                vm.view = calendarHelper.getMonthView($scope.events, $scope.currentDay);\n                var rows = Math.floor(vm.view.length / 7);\n                vm.monthOffsets = [];\n                for (var i = 0; i < rows; i++) {\n                    vm.monthOffsets.push(i * 7);\n                }\n                //Auto open the calendar to the current day if set\n                if ($scope.autoOpen && firstRun) {\n                    firstRun = false;\n                    vm.view.forEach(function (day) {\n                        if (day.inMonth && moment($scope.currentDay).startOf('day').isSame(day.date)) {\n                            vm.dayClicked(day, true);\n                        }\n                    });\n                }\n            });\n            vm.dayClicked = function (day, dayClickedFirstRun) {\n                if (!dayClickedFirstRun) {\n                    $scope.onTimespanClick({ calendarDate: day.date.toDate() });\n                }\n                vm.openRowIndex = null;\n                var dayIndex = vm.view.indexOf(day);\n                if (dayIndex === vm.openDayIndex) {\n                    //the day has been clicked and is already open\n                    vm.openDayIndex = null;    //close the open day\n                } else {\n                    vm.openDayIndex = dayIndex;\n                    vm.openRowIndex = Math.floor(dayIndex / 7);\n                }\n            };\n            vm.highlightEvent = function (event, shouldAddClass) {\n                vm.view.forEach(function (day) {\n                    delete day.highlightClass;\n                    if (shouldAddClass) {\n                        var dayContainsEvent = day.events.indexOf(event) > -1;\n                        if (dayContainsEvent) {\n                            day.highlightClass = 'day-highlight dh-event-' + event.type;\n                        }\n                    }\n                });\n            };\n            vm.handleEventDrop = function (event, newDayDate) {\n                var newStart = moment(event.startsAt).date(moment(newDayDate).date()).month(moment(newDayDate).month());\n                var newEnd = calendarHelper.adjustEndDateFromStartDiff(event.startsAt, newStart, event.endsAt);\n                $scope.onEventDrop({\n                    calendarEvent: event,\n                    calendarDate: newDayDate,\n                    calendarNewEventStart: newStart.toDate(),\n                    calendarNewEventEnd: newEnd.toDate()\n                });\n            };\n        }\n    ]).directive('mwlCalendarMonth', function () {\n        return {\n            templateUrl: 'src/templates/calendarMonthView.html',\n            restrict: 'EA',\n            require: '^mwlCalendar',\n            scope: {\n                day: '=',\n                customData: '=',\n                events: '=',\n                currentDay: '=',\n                onEventClick: '=',\n                onEditEventClick: '=',\n                onDeleteEventClick: '=',\n                onEventDrop: '=',\n                editEventHtml: '=',\n                deleteEventHtml: '=',\n                autoOpen: '=',\n                onTimespanClick: '='\n            },\n            controller: 'MwlCalendarMonthCtrl as vm',\n            link: function (scope, element, attrs, calendarCtrl) {\n                scope.vm.calendarCtrl = calendarCtrl;\n            }\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlCalendarHourListCtrl', [\n        '$scope',\n        'moment',\n        'calendarConfig',\n        'calendarHelper',\n        function ($scope, moment, calendarConfig, calendarHelper) {\n            var vm = this;\n            var dayViewStart, dayViewEnd;\n            function updateDays() {\n                dayViewStart = moment($scope.dayViewStart || '00:00', 'HH:mm');\n                dayViewEnd = moment($scope.dayViewEnd || '23:00', 'HH:mm');\n                vm.dayViewSplit = parseInt($scope.dayViewSplit);\n                vm.hours = [];\n                var dayCounter = moment(dayViewStart);\n                for (var i = 0; i <= dayViewEnd.diff(dayViewStart, 'hours'); i++) {\n                    vm.hours.push({ label: calendarHelper.formatDate(dayCounter, calendarConfig.dateFormats.hour) });\n                    dayCounter.add(1, 'hour');\n                }\n            }\n            var originalLocale = moment.locale();\n            $scope.$on('calendar.refreshView', function () {\n                if (originalLocale !== moment.locale()) {\n                    originalLocale = moment.locale();\n                    updateDays();\n                }\n            });\n            updateDays();\n        }\n    ]).directive('mwlCalendarHourList', function () {\n        return {\n            restrict: 'EA',\n            templateUrl: 'src/templates/calendarHourList.html',\n            controller: 'MwlCalendarHourListCtrl as vm',\n            scope: {\n                dayViewStart: '=',\n                dayViewEnd: '=',\n                dayViewSplit: '='\n            }\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlCalendarDayCtrl', [\n        '$scope',\n        '$timeout',\n        '$sce',\n        'moment',\n        'calendarHelper',\n        'calendarConfig',\n        function ($scope, $timeout, $sce, moment, calendarHelper, calendarConfig) {\n            var vm = this;\n            vm.calendarConfig = calendarConfig;\n            vm.$sce = $sce;\n            $scope.$on('calendar.refreshView', function () {\n                vm.dayViewHeight = calendarHelper.getDayViewHeight($scope.dayViewStart, $scope.dayViewEnd, $scope.dayViewSplit);\n                vm.view = calendarHelper.getDayView($scope.events, $scope.currentDay, $scope.dayViewStart, $scope.dayViewEnd, $scope.dayViewSplit);\n            });\n            vm.timeChanged = function (event, minuteChunksMoved) {\n                var minutesDiff = minuteChunksMoved * $scope.dayViewSplit;\n                var newStart = moment(event.startsAt).add(minutesDiff, 'minutes');\n                var newEnd = moment(event.endsAt).add(minutesDiff, 'minutes');\n                delete event.tempStartsAt;\n                $scope.onEventDrop({\n                    calendarEvent: event,\n                    calendarNewEventStart: newStart.toDate(),\n                    calendarNewEventEnd: newEnd.toDate()\n                });\n            };\n            vm.tempTimeChanged = function (event, minuteChunksMoved) {\n                var minutesDiff = minuteChunksMoved * $scope.dayViewSplit;\n                event.tempStartsAt = moment(event.startsAt).add(minutesDiff, 'minutes').toDate();\n            };\n        }\n    ]).directive('mwlCalendarDay', function () {\n        return {\n            templateUrl: 'src/templates/calendarDayView.html',\n            restrict: 'EA',\n            require: '^mwlCalendar',\n            scope: {\n                customData: '=',\n                events: '=',\n                currentDay: '=',\n                onEventClick: '=',\n                onEventDrop: '=',\n                dayViewStart: '=',\n                dayViewEnd: '=',\n                dayViewSplit: '='\n            },\n            controller: 'MwlCalendarDayCtrl as vm'\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlCalendarCtrl', [\n        '$scope',\n        '$timeout',\n        '$window',\n        '$locale',\n        'moment',\n        'calendarTitle',\n        'calendarDebounce',\n        function ($scope, $timeout, $window, $locale, moment, calendarTitle, calendarDebounce) {\n            var vm = this;\n            $scope.events = $scope.events || [];\n            vm.changeView = function (view, newDay) {\n                $scope.view = view;\n                $scope.currentDay = newDay;\n            };\n            vm.drillDown = function (date) {\n                var rawDate = moment(date).toDate();\n                var nextView = {\n                    year: 'month',\n                    month: 'day',\n                    week: 'day'\n                };\n                if ($scope.onDrillDownClick({\n                        calendarDate: rawDate,\n                        calendarNextView: nextView[$scope.view]\n                    }) !== false) {\n                    vm.changeView(nextView[$scope.view], rawDate);\n                }\n            };\n            var previousDate = moment($scope.currentDay);\n            var previousView = angular.copy($scope.view);\n            //Use a debounce to prevent it being called 3 times on initialisation\n            var refreshCalendar = calendarDebounce(function () {\n                if (calendarTitle[$scope.view]) {\n                    $scope.viewTitle = calendarTitle[$scope.view]($scope.currentDay);\n                }\n                $scope.events = $scope.events.map(function (event, index) {\n                    Object.defineProperty(event, '$id', {\n                        enumerable: false,\n                        value: index,\n                        configurable: true\n                    });\n                    return event;\n                });\n                //if on-timespan-click=\"calendarDay = calendarDate\" is set then dont update the view as nothing needs to change\n                var currentDate = moment($scope.currentDay);\n                var shouldUpdate = true;\n                if (previousDate.clone().startOf($scope.view).isSame(currentDate.clone().startOf($scope.view)) && !previousDate.isSame(currentDate) && $scope.view === previousView) {\n                    shouldUpdate = false;\n                }\n                previousDate = currentDate;\n                previousView = angular.copy($scope.view);\n                if (shouldUpdate) {\n                    $scope.$broadcast('calendar.refreshView');\n                }\n            }, 50);\n            //Auto update the calendar when the locale changes\n            var unbindLocaleWatcher = $scope.$watch(function () {\n                return moment.locale() + $locale.id;\n            }, refreshCalendar);\n            var unbindOnDestroy = [];\n            unbindOnDestroy.push(unbindLocaleWatcher);\n            //Refresh the calendar when any of these variables change.\n            unbindOnDestroy.push($scope.$watch('currentDay', refreshCalendar));\n            unbindOnDestroy.push($scope.$watch('view', refreshCalendar));\n            unbindOnDestroy.push($scope.$watch('events', refreshCalendar, true));\n            //Remove any watchers when the calendar is destroyed\n            var unbindDestroyListener = $scope.$on('$destroy', function () {\n                unbindOnDestroy.forEach(function (unbind) {\n                    unbind();\n                });\n            });\n            unbindOnDestroy.push(unbindDestroyListener);\n        }\n    ]).directive('mwlCalendar', function () {\n        return {\n            templateUrl: 'src/templates/calendar.html',\n            restrict: 'EA',\n            scope: {\n                customData: '=',\n                events: '=',\n                view: '=',\n                viewTitle: '=',\n                currentDay: '=',\n                editEventHtml: '=',\n                deleteEventHtml: '=',\n                autoOpen: '=',\n                onEventClick: '&',\n                onEventDrop: '&',\n                onEditEventClick: '&',\n                onDeleteEventClick: '&',\n                onTimespanClick: '&',\n                onDrillDownClick: '&',\n                dayViewStart: '@',\n                dayViewEnd: '@',\n                dayViewSplit: '@'\n            },\n            controller: 'MwlCalendarCtrl as vm'\n        };\n    });\n}(window, angular));","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.constant('moment', window.moment); //eslint-disable-line angular/ng_window_service\n","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.constant('interact', window.interact); //eslint-disable-line angular/ng_window_service\n","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.factory('calendarTitle', function (moment, calendarConfig, calendarHelper) {\n\n\t\tfunction day(currentDay) {\n\t\t\treturn calendarHelper.formatDate(currentDay, calendarConfig.titleFormats.day);\n\t\t}\n\n\t\tfunction week(currentDay) {\n\t\t\tvar weekTitleLabel = calendarConfig.titleFormats.week;\n\t\t\treturn weekTitleLabel.replace('{week}', moment(currentDay).week()).replace('{year}', moment(currentDay).format('YYYY'));\n\t\t}\n\n\t\tfunction month(currentDay) {\n\t\t\treturn calendarHelper.formatDate(currentDay, calendarConfig.titleFormats.month);\n\t\t}\n\n\t\tfunction year(currentDay) {\n\t\t\treturn calendarHelper.formatDate(currentDay, calendarConfig.titleFormats.year);\n\t\t}\n\n\t\treturn {\n\t\t\tday: day,\n\t\t\tweek: week,\n\t\t\tmonth: month,\n\t\t\tyear: year\n\t\t};\n\n\t});\n","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.factory('calendarHelper', function (dateFilter, moment, calendarConfig) {\n\n\t\tfunction formatDate(date, format) {\n\t\t\tif (calendarConfig.dateFormatter === 'angular') {\n\t\t\t\treturn dateFilter(moment(date).toDate(), format);\n\t\t\t} else if (calendarConfig.dateFormatter === 'moment') {\n\t\t\t\treturn moment(date).format(format);\n\t\t\t}\n\t\t}\n\n\t\tfunction adjustEndDateFromStartDiff(oldStart, newStart, oldEnd) {\n\t\t\tif (!oldEnd) {\n\t\t\t\treturn oldEnd;\n\t\t\t}\n\t\t\tvar diffInSeconds = moment(newStart).diff(moment(oldStart));\n\t\t\treturn moment(oldEnd).add(diffInSeconds);\n\t\t}\n\n\t\tfunction eventIsInPeriod(event, periodStart, periodEnd) {\n\n\t\t\tvar eventStart = moment(event.startsAt);\n\t\t\tvar eventEnd = moment(event.endsAt || event.startsAt);\n\t\t\tperiodStart = moment(periodStart);\n\t\t\tperiodEnd = moment(periodEnd);\n\n\t\t\tif (angular.isDefined(event.recursOn)) {\n\n\t\t\t\tswitch (event.recursOn) {\n\t\t\t\t\tcase 'year':\n\t\t\t\t\t\teventStart.set({\n\t\t\t\t\t\t\tyear: periodStart.year()\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'month':\n\t\t\t\t\t\teventStart.set({\n\t\t\t\t\t\t\tyear: periodStart.year(),\n\t\t\t\t\t\t\tmonth: periodStart.month()\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('Invalid value (' + event.recursOn + ') given for recurs on. Can only be year, month or week.');\n\t\t\t\t}\n\n\t\t\t\teventEnd = adjustEndDateFromStartDiff(event.startsAt, eventStart, eventEnd);\n\n\t\t\t}\n\n\t\t\treturn (eventStart.isAfter(periodStart) && eventStart.isBefore(periodEnd)) ||\n\t\t\t\t(eventEnd.isAfter(periodStart) && eventEnd.isBefore(periodEnd)) ||\n\t\t\t\t(eventStart.isBefore(periodStart) && eventEnd.isAfter(periodEnd)) ||\n\t\t\t\teventStart.isSame(periodStart) ||\n\t\t\t\teventEnd.isSame(periodEnd);\n\n\t\t}\n\n\t\tfunction filterEventsInPeriod(events, startPeriod, endPeriod) {\n\t\t\treturn events.filter(function (event) {\n\t\t\t\treturn eventIsInPeriod(event, startPeriod, endPeriod);\n\t\t\t});\n\t\t}\n\n\t\tfunction getEventsInPeriod(calendarDate, period, allEvents) {\n\t\t\tvar startPeriod = moment(calendarDate).startOf(period);\n\t\t\tvar endPeriod = moment(calendarDate).endOf(period);\n\t\t\treturn filterEventsInPeriod(allEvents, startPeriod, endPeriod);\n\t\t}\n\n\t\tfunction getBadgeTotal(events) {\n\t\t\treturn events.filter(function (event) {\n\t\t\t\treturn event.incrementsBadgeTotal !== false;\n\t\t\t}).length;\n\t\t}\n\n\t\tfunction getWeekDayNames() {\n\t\t\tvar weekdays = [];\n\t\t\tvar count = 0;\n\t\t\twhile (count < 7) {\n\t\t\t\tweekdays.push(formatDate(moment().weekday(count++), calendarConfig.dateFormats.weekDay));\n\t\t\t}\n\t\t\treturn weekdays;\n\t\t}\n\n\t\tfunction getYearView(events, currentDay) {\n\n\t\t\tvar view = [];\n\t\t\tvar eventsInPeriod = getEventsInPeriod(currentDay, 'year', events);\n\t\t\tvar month = moment(currentDay).startOf('year');\n\t\t\tvar count = 0;\n\t\t\twhile (count < 12) {\n\t\t\t\tvar startPeriod = month.clone();\n\t\t\t\tvar endPeriod = startPeriod.clone().endOf('month');\n\t\t\t\tvar periodEvents = filterEventsInPeriod(eventsInPeriod, startPeriod, endPeriod);\n\t\t\t\tview.push({\n\t\t\t\t\tlabel: formatDate(startPeriod, calendarConfig.dateFormats.month),\n\t\t\t\t\tisToday: startPeriod.isSame(moment().startOf('month')),\n\t\t\t\t\tevents: periodEvents,\n\t\t\t\t\tdate: startPeriod,\n\t\t\t\t\tbadgeTotal: getBadgeTotal(periodEvents)\n\t\t\t\t});\n\n\t\t\t\tmonth.add(1, 'month');\n\t\t\t\tcount++;\n\t\t\t}\n\n\t\t\treturn view;\n\n\t\t}\n\n\t\tfunction getMonthView(events, currentDay) {\n\n\t\t\tvar startOfMonth = moment(currentDay).startOf('month');\n\t\t\tvar day = startOfMonth.clone().startOf('week');\n\t\t\tvar endOfMonthView = moment(currentDay).endOf('month').endOf('week');\n\t\t\tvar eventsInPeriod;\n\t\t\tif (calendarConfig.displayAllMonthEvents) {\n\t\t\t\teventsInPeriod = filterEventsInPeriod(events, day, endOfMonthView);\n\t\t\t} else {\n\t\t\t\teventsInPeriod = filterEventsInPeriod(events, startOfMonth, startOfMonth.clone().endOf('month'));\n\t\t\t}\n\t\t\tvar view = [];\n\t\t\tvar today = moment().startOf('day');\n\n\t\t\twhile (day.isBefore(endOfMonthView)) {\n\n\t\t\t\tvar inMonth = day.month() === moment(currentDay).month();\n\t\t\t\tvar monthEvents = [];\n\t\t\t\tif (inMonth || calendarConfig.displayAllMonthEvents) {\n\t\t\t\t\tmonthEvents = filterEventsInPeriod(eventsInPeriod, day, day.clone().endOf('day'));\n\t\t\t\t}\n\n\t\t\t\tview.push({\n\t\t\t\t\tlabel: day.date(),\n\t\t\t\t\tdate: day.clone(),\n\t\t\t\t\tinMonth: inMonth,\n\t\t\t\t\tisPast: today.isAfter(day),\n\t\t\t\t\tisToday: today.isSame(day),\n\t\t\t\t\tisFuture: today.isBefore(day),\n\t\t\t\t\tisWeekend: [0, 6].indexOf(day.day()) > -1,\n\t\t\t\t\tevents: monthEvents,\n\t\t\t\t\tbadgeTotal: getBadgeTotal(monthEvents)\n\t\t\t\t});\n\n\t\t\t\tday.add(1, 'day');\n\t\t\t}\n\n\t\t\treturn view;\n\n\t\t}\n\n\t\tfunction getWeekView(events, currentDay) {\n\n\t\t\tvar startOfWeek = moment(currentDay).startOf('week');\n\t\t\tvar endOfWeek = moment(currentDay).endOf('week');\n\t\t\tvar dayCounter = startOfWeek.clone();\n\t\t\tvar days = [];\n\t\t\tvar today = moment().startOf('day');\n\t\t\twhile (days.length < 7) {\n\t\t\t\tdays.push({\n\t\t\t\t\tweekDayLabel: formatDate(dayCounter, calendarConfig.dateFormats.weekDay),\n\t\t\t\t\tdate: dayCounter.clone(),\n\t\t\t\t\tdayLabel: formatDate(dayCounter, calendarConfig.dateFormats.day),\n\t\t\t\t\tisPast: dayCounter.isBefore(today),\n\t\t\t\t\tisToday: dayCounter.isSame(today),\n\t\t\t\t\tisFuture: dayCounter.isAfter(today),\n\t\t\t\t\tisWeekend: [0, 6].indexOf(dayCounter.day()) > -1\n\t\t\t\t});\n\t\t\t\tdayCounter.add(1, 'day');\n\t\t\t}\n\n\t\t\tvar eventsSorted = filterEventsInPeriod(events, startOfWeek, endOfWeek).map(function (event) {\n\n\t\t\t\tvar eventStart = moment(event.startsAt).startOf('day');\n\t\t\t\tvar eventEnd = moment(event.endsAt || event.startsAt).startOf('day');\n\t\t\t\tvar weekViewStart = moment(startOfWeek).startOf('day');\n\t\t\t\tvar weekViewEnd = moment(endOfWeek).startOf('day');\n\t\t\t\tvar offset, span;\n\n\t\t\t\tif (eventStart.isBefore(weekViewStart) || eventStart.isSame(weekViewStart)) {\n\t\t\t\t\toffset = 0;\n\t\t\t\t} else {\n\t\t\t\t\toffset = eventStart.diff(weekViewStart, 'days');\n\t\t\t\t}\n\n\t\t\t\tif (eventEnd.isAfter(weekViewEnd)) {\n\t\t\t\t\teventEnd = weekViewEnd;\n\t\t\t\t}\n\n\t\t\t\tif (eventStart.isBefore(weekViewStart)) {\n\t\t\t\t\teventStart = weekViewStart;\n\t\t\t\t}\n\n\t\t\t\tspan = moment(eventEnd).diff(eventStart, 'days') + 1;\n\n\t\t\t\tevent.daySpan = span;\n\t\t\t\tevent.dayOffset = offset;\n\n\t\t\t\treturn event;\n\t\t\t});\n\n\t\t\treturn {days: days, events: eventsSorted};\n\n\t\t}\n\n\t\tfunction getDayView(events, currentDay, dayViewStart, dayViewEnd, dayViewSplit) {\n\n\t\t\tvar dayStartHour = moment(dayViewStart || '00:00', 'HH:mm').hours();\n\t\t\tvar dayEndHour = moment(dayViewEnd || '23:00', 'HH:mm').hours();\n\t\t\tvar hourHeight = (60 / dayViewSplit) * 30;\n\t\t\tvar calendarStart = moment(currentDay).startOf('day').add(dayStartHour, 'hours');\n\t\t\tvar calendarEnd = moment(currentDay).startOf('day').add(dayEndHour, 'hours');\n\t\t\tvar calendarHeight = (dayEndHour - dayStartHour + 1) * hourHeight;\n\t\t\tvar hourHeightMultiplier = hourHeight / 60;\n\t\t\tvar buckets = [];\n\t\t\tvar eventsInPeriod = filterEventsInPeriod(\n\t\t\t\tevents,\n\t\t\t\tmoment(currentDay).startOf('day').toDate(),\n\t\t\t\tmoment(currentDay).endOf('day').toDate()\n\t\t\t);\n\n\t\t\treturn eventsInPeriod.map(function (event) {\n\t\t\t\tif (moment(event.startsAt).isBefore(calendarStart)) {\n\t\t\t\t\tevent.top = 0;\n\t\t\t\t} else {\n\t\t\t\t\tevent.top = (moment(event.startsAt).startOf('minute').diff(calendarStart.startOf('minute'), 'minutes') * hourHeightMultiplier) - 2;\n\t\t\t\t}\n\n\t\t\t\tif (moment(event.endsAt || event.startsAt).isAfter(calendarEnd)) {\n\t\t\t\t\tevent.height = calendarHeight - event.top;\n\t\t\t\t} else {\n\t\t\t\t\tvar diffStart = event.startsAt;\n\t\t\t\t\tif (moment(event.startsAt).isBefore(calendarStart)) {\n\t\t\t\t\t\tdiffStart = calendarStart.toDate();\n\t\t\t\t\t}\n\t\t\t\t\tif (!event.endsAt) {\n\t\t\t\t\t\tevent.height = 30;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tevent.height = moment(event.endsAt || event.startsAt).diff(diffStart, 'minutes') * hourHeightMultiplier;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (event.top - event.height > calendarHeight) {\n\t\t\t\t\tevent.height = 0;\n\t\t\t\t}\n\n\t\t\t\tevent.left = 0;\n\n\t\t\t\treturn event;\n\t\t\t}).filter(function (event) {\n\t\t\t\treturn event.height > 0;\n\t\t\t}).map(function (event) {\n\n\t\t\t\tvar cannotFitInABucket = true;\n\t\t\t\tbuckets.forEach(function (bucket, bucketIndex) {\n\t\t\t\t\tvar canFitInThisBucket = true;\n\n\t\t\t\t\tbucket.forEach(function (bucketItem) {\n\t\t\t\t\t\tif (eventIsInPeriod(event, bucketItem.startsAt, bucketItem.endsAt || bucketItem.startsAt) ||\n\t\t\t\t\t\t\teventIsInPeriod(bucketItem, event.startsAt, event.endsAt || event.startsAt)) {\n\t\t\t\t\t\t\tcanFitInThisBucket = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (canFitInThisBucket && cannotFitInABucket) {\n\t\t\t\t\t\tcannotFitInABucket = false;\n\t\t\t\t\t\tevent.left = bucketIndex * 150;\n\t\t\t\t\t\tbuckets[bucketIndex].push(event);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t\tif (cannotFitInABucket) {\n\t\t\t\t\tevent.left = buckets.length * 150;\n\t\t\t\t\tbuckets.push([event]);\n\t\t\t\t}\n\n\t\t\t\treturn event;\n\n\t\t\t});\n\n\t\t}\n\n\t\tfunction getWeekViewWithTimes(events, currentDay, dayViewStart, dayViewEnd, dayViewSplit) {\n\t\t\tvar weekView = getWeekView(events, currentDay);\n\t\t\tvar newEvents = [];\n\t\t\tweekView.days.forEach(function (day) {\n\t\t\t\tvar dayEvents = weekView.events.filter(function (event) {\n\t\t\t\t\treturn moment(event.startsAt).startOf('day').isSame(moment(day.date).startOf('day'));\n\t\t\t\t});\n\t\t\t\tvar newDayEvents = getDayView(\n\t\t\t\t\tdayEvents,\n\t\t\t\t\tday.date,\n\t\t\t\t\tdayViewStart,\n\t\t\t\t\tdayViewEnd,\n\t\t\t\t\tdayViewSplit\n\t\t\t\t);\n\t\t\t\tnewEvents = newEvents.concat(newDayEvents);\n\t\t\t});\n\t\t\tweekView.events = newEvents;\n\t\t\treturn weekView;\n\t\t}\n\n\t\tfunction getDayViewHeight(dayViewStart, dayViewEnd, dayViewSplit) {\n\t\t\tvar dayViewStartM = moment(dayViewStart || '00:00', 'HH:mm');\n\t\t\tvar dayViewEndM = moment(dayViewEnd || '23:00', 'HH:mm');\n\t\t\tvar hourHeight = (60 / dayViewSplit) * 30;\n\t\t\treturn ((dayViewEndM.diff(dayViewStartM, 'hours') + 1) * hourHeight) + 2;\n\t\t}\n\n\t\treturn {\n\t\t\tgetWeekDayNames: getWeekDayNames,\n\t\t\tgetYearView: getYearView,\n\t\t\tgetMonthView: getMonthView,\n\t\t\tgetWeekView: getWeekView,\n\t\t\tgetDayView: getDayView,\n\t\t\tgetWeekViewWithTimes: getWeekViewWithTimes,\n\t\t\tgetDayViewHeight: getDayViewHeight,\n\t\t\tadjustEndDateFromStartDiff: adjustEndDateFromStartDiff,\n\t\t\tformatDate: formatDate,\n\t\t\teventIsInPeriod: eventIsInPeriod //expose for testing only\n\t\t};\n\n\t});\n","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.service('calendarDebounce', function ($timeout) {\n\n\t\tfunction debounce(func, wait, immediate) {\n\t\t\tvar timeout;\n\t\t\treturn function () {\n\t\t\t\tvar context = this, args = arguments;\n\n\t\t\t\tfunction later() {\n\t\t\t\t\ttimeout = null;\n\t\t\t\t\tif (!immediate) {\n\t\t\t\t\t\tfunc.apply(context, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar callNow = immediate && !timeout;\n\t\t\t\t$timeout.cancel(timeout);\n\t\t\t\ttimeout = $timeout(later, wait);\n\t\t\t\tif (callNow) {\n\t\t\t\t\tfunc.apply(context, args);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\treturn debounce;\n\n\t});\n","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.provider('calendarConfig', function () {\n\n\t\tvar defaultFormats = {\n\t\t\tangular: {\n\t\t\t\tdate: {\n\t\t\t\t\thour: 'ha',\n\t\t\t\t\tday: 'd MMM',\n\t\t\t\t\tmonth: 'MMMM',\n\t\t\t\t\tweekDay: 'EEEE',\n\t\t\t\t\ttime: 'HH:mm',\n\t\t\t\t\tdatetime: 'MMM d, h:mm a'\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\tday: 'EEEE d MMMM, yyyy',\n\t\t\t\t\tweek: 'Week {week} of {year}',\n\t\t\t\t\tmonth: 'MMMM yyyy',\n\t\t\t\t\tyear: 'yyyy'\n\t\t\t\t}\n\t\t\t},\n\t\t\tmoment: {\n\t\t\t\tdate: {\n\t\t\t\t\thour: 'ha',\n\t\t\t\t\tday: 'D MMM',\n\t\t\t\t\tmonth: 'MMMM',\n\t\t\t\t\tweekDay: 'dddd',\n\t\t\t\t\ttime: 'HH:mm',\n\t\t\t\t\tdatetime: 'MMM D, h:mm a'\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\tday: 'dddd D MMMM, YYYY',\n\t\t\t\t\tweek: 'Week {week} of {year}',\n\t\t\t\t\tmonth: 'MMMM YYYY',\n\t\t\t\t\tyear: 'YYYY'\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar dateFormatter = 'angular';\n\t\tvar defaultDateFormats = angular.copy(defaultFormats[dateFormatter].date);\n\t\tvar defaultTitleFormats = angular.copy(defaultFormats[dateFormatter].title);\n\t\tvar showTimesOnWeekView = false;\n\n\t\tvar i18nStrings = {\n\t\t\teventsLabel: 'Events',\n\t\t\ttimeLabel: 'Time'\n\t\t};\n\n\t\tvar displayAllMonthEvents = false;\n\n\t\tvar configProvider = this;\n\n\t\tconfigProvider.setDateFormats = function (formats) {\n\t\t\tangular.extend(defaultDateFormats, formats);\n\t\t\treturn configProvider;\n\t\t};\n\n\t\tconfigProvider.setTitleFormats = function (formats) {\n\t\t\tangular.extend(defaultTitleFormats, formats);\n\t\t\treturn configProvider;\n\t\t};\n\n\t\tconfigProvider.setI18nStrings = function (strings) {\n\t\t\tangular.extend(i18nStrings, strings);\n\t\t\treturn configProvider;\n\t\t};\n\n\t\tconfigProvider.setDisplayAllMonthEvents = function (value) {\n\t\t\tdisplayAllMonthEvents = value;\n\t\t\treturn configProvider;\n\t\t};\n\n\t\tconfigProvider.setDateFormatter = function (value) {\n\t\t\tif (['angular', 'moment'].indexOf(value) === -1) {\n\t\t\t\tthrow new Error('Invalid date formatter. Allowed types are angular and moment.');\n\t\t\t}\n\t\t\tdateFormatter = value;\n\t\t\tdefaultDateFormats = angular.copy(defaultFormats[dateFormatter].date);\n\t\t\tdefaultTitleFormats = angular.copy(defaultFormats[dateFormatter].title);\n\t\t\treturn configProvider;\n\t\t};\n\n\t\tconfigProvider.showTimesOnWeekView = function (value) {\n\t\t\tshowTimesOnWeekView = value; //experimental, and ignores the event end date\n\t\t\treturn configProvider;\n\t\t};\n\n\t\tconfigProvider.$get = function () {\n\t\t\treturn {\n\t\t\t\tdateFormats: defaultDateFormats,\n\t\t\t\ttitleFormats: defaultTitleFormats,\n\t\t\t\ti18nStrings: i18nStrings,\n\t\t\t\tdisplayAllMonthEvents: displayAllMonthEvents,\n\t\t\t\tdateFormatter: dateFormatter,\n\t\t\t\tshowTimesOnWeekView: showTimesOnWeekView\n\t\t\t};\n\t\t};\n\n\t});\n","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.filter('calendarTruncateEventTitle', function () {\n\n\t\treturn function (string, length, boxHeight) {\n\t\t\tif (!string) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\t//Only truncate if if actually needs truncating\n\t\t\tif (string.length >= length && string.length / 20 > boxHeight / 30) {\n\t\t\t\treturn string.substr(0, length) + '...';\n\t\t\t} else {\n\t\t\t\treturn string;\n\t\t\t}\n\t\t};\n\n\t});\n","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.filter('calendarLimitTo', function (limitToFilter) {\n\n\t\tif (angular.version.minor >= 4) { //1.4+ supports the begin attribute\n\t\t\treturn limitToFilter;\n\t\t}\n\n\t\t//Copied from the angular source. Only 1.4 has the begin functionality.\n\t\treturn function (input, limit, begin) {\n\t\t\tif (Math.abs(Number(limit)) === Infinity) {\n\t\t\t\tlimit = Number(limit);\n\t\t\t} else {\n\t\t\t\tlimit = parseInt(limit);\n\t\t\t}\n\t\t\tif (isNaN(limit)) {\n\t\t\t\treturn input;\n\t\t\t}\n\n\t\t\tif (angular.isNumber(input)) {\n\t\t\t\tinput = input.toString();\n\t\t\t}\n\t\t\tif (!angular.isArray(input) && !angular.isString(input)) {\n\t\t\t\treturn input;\n\t\t\t}\n\n\t\t\tbegin = (!begin || isNaN(begin)) ? 0 : parseInt(begin);\n\t\t\tbegin = (begin < 0 && begin >= -input.length) ? input.length + begin : begin;\n\n\t\t\tif (limit >= 0) {\n\t\t\t\treturn input.slice(begin, begin + limit);\n\t\t\t} else if (begin === 0) {\n\t\t\t\treturn input.slice(limit, input.length);\n\t\t\t} else {\n\t\t\t\treturn input.slice(Math.max(0, begin + limit), begin);\n\t\t\t}\n\t\t};\n\n\t});\n","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.filter('calendarDate', function (calendarHelper, calendarConfig) {\n\n\t\tfunction calendarDate(date, format, getFromConfig) {\n\n\t\t\tif (getFromConfig === true) {\n\t\t\t\tformat = calendarConfig.dateFormats[format];\n\t\t\t}\n\n\t\t\treturn calendarHelper.formatDate(date, format);\n\n\t\t}\n\n\t\tcalendarDate.$stateful = true;\n\n\t\treturn calendarDate;\n\n\t});\n","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.controller('MwlElementDimensionsCtrl', function ($element, $scope, $parse, $attrs) {\n\n\t\t$parse($attrs.mwlElementDimensions).assign($scope, {\n\t\t\twidth: $element[0].offsetWidth,\n\t\t\theight: $element[0].offsetHeight\n\t\t});\n\n\t})\n\t.directive('mwlElementDimensions', function () {\n\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tcontroller: 'MwlElementDimensionsCtrl'\n\t\t};\n\n\t});\n","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.controller('MwlDroppableCtrl', function ($element, $scope, $parse, $attrs, interact) {\n\n\t\tif (!interact) {\n\t\t\treturn;\n\t\t}\n\n\t\tinteract($element[0]).dropzone({\n\t\t\tondragenter: function (event) {\n\t\t\t\tangular.element(event.target).addClass('drop-active');\n\t\t\t},\n\t\t\tondragleave: function (event) {\n\t\t\t\tangular.element(event.target).removeClass('drop-active');\n\t\t\t},\n\t\t\tondropdeactivate: function (event) {\n\t\t\t\tangular.element(event.target).removeClass('drop-active');\n\t\t\t},\n\t\t\tondrop: function (event) {\n\t\t\t\tif (event.relatedTarget.dropData) {\n\t\t\t\t\t$parse($attrs.onDrop)($scope, {dropData: event.relatedTarget.dropData});\n\t\t\t\t\t$scope.$apply();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tvar unbindDestroy = $scope.$on('$destroy', function () {\n\t\t\tunbindDestroy();\n\t\t\tinteract($element[0]).unset();\n\t\t});\n\n\t})\n\t.directive('mwlDroppable', function () {\n\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tcontroller: 'MwlDroppableCtrl'\n\t\t};\n\n\t});\n","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.controller('MwlDraggableCtrl', function ($element, $scope, $window, $parse, $attrs, $timeout, interact) {\n\n\t\tif (!interact) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar snap, snapGridDimensions;\n\t\tif ($attrs.snapGrid) {\n\t\t\tsnapGridDimensions = $parse($attrs.snapGrid)($scope);\n\t\t\tsnap = {\n\t\t\t\ttargets: [\n\t\t\t\t\tinteract.createSnapGrid(snapGridDimensions)\n\t\t\t\t]\n\t\t\t};\n\t\t}\n\n\t\tfunction translateElement(elm, transformValue) {\n\t\t\treturn elm\n\t\t\t\t.css('transform', transformValue)\n\t\t\t\t.css('-ms-transform', transformValue)\n\t\t\t\t.css('-webkit-transform', transformValue);\n\t\t}\n\n\t\tfunction canDrag() {\n\t\t\treturn $parse($attrs.mwlDraggable)($scope);\n\t\t}\n\n\t\tfunction getUnitsMoved(x, y, gridDimensions) {\n\n\t\t\tvar result = {x: x, y: y};\n\n\t\t\tif (gridDimensions && gridDimensions.x) {\n\t\t\t\tresult.x /= gridDimensions.x;\n\t\t\t}\n\n\t\t\tif (gridDimensions && gridDimensions.y) {\n\t\t\t\tresult.y /= gridDimensions.y;\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tinteract($element[0]).draggable({\n\t\t\tsnap: snap,\n\t\t\tonstart: function (event) {\n\t\t\t\tif (canDrag()) {\n\t\t\t\t\tangular.element(event.target).addClass('dragging-active');\n\t\t\t\t\tevent.target.dropData = $parse($attrs.dropData)($scope);\n\t\t\t\t\tevent.target.style.pointerEvents = 'none';\n\t\t\t\t\tif ($attrs.onDragStart) {\n\t\t\t\t\t\t$parse($attrs.onDragStart)($scope);\n\t\t\t\t\t\t$scope.$apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tonmove: function (event) {\n\n\t\t\t\tif (canDrag()) {\n\t\t\t\t\tvar elm = angular.element(event.target);\n\t\t\t\t\tvar x = (parseFloat(elm.attr('data-x')) || 0) + (event.dx || 0);\n\t\t\t\t\tvar y = (parseFloat(elm.attr('data-y')) || 0) + (event.dy || 0);\n\n\t\t\t\t\tswitch ($parse($attrs.axis)($scope)) {\n\t\t\t\t\t\tcase 'x':\n\t\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'y':\n\t\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($window.getComputedStyle(elm[0]).position === 'static') {\n\t\t\t\t\t\telm.css('position', 'relative');\n\t\t\t\t\t}\n\n\t\t\t\t\ttranslateElement(elm, 'translate(' + x + 'px, ' + y + 'px)')\n\t\t\t\t\t\t.css('z-index', 1000)\n\t\t\t\t\t\t.attr('data-x', x)\n\t\t\t\t\t\t.attr('data-y', y);\n\n\t\t\t\t\tif ($attrs.onDrag) {\n\t\t\t\t\t\t$parse($attrs.onDrag)($scope, getUnitsMoved(x, y, snapGridDimensions));\n\t\t\t\t\t\t$scope.$apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t},\n\t\t\tonend: function (event) {\n\n\t\t\t\tif (canDrag()) {\n\t\t\t\t\tvar elm = angular.element(event.target);\n\t\t\t\t\tvar x = elm.attr('data-x');\n\t\t\t\t\tvar y = elm.attr('data-y');\n\n\t\t\t\t\tevent.target.style.pointerEvents = 'auto';\n\t\t\t\t\tif ($attrs.onDragEnd) {\n\t\t\t\t\t\t$parse($attrs.onDragEnd)($scope, getUnitsMoved(x, y, snapGridDimensions));\n\t\t\t\t\t\t$scope.$apply();\n\t\t\t\t\t}\n\n\t\t\t\t\t$timeout(function () {\n\t\t\t\t\t\ttranslateElement(elm, null)\n\t\t\t\t\t\t\t.removeAttr('data-x')\n\t\t\t\t\t\t\t.removeAttr('data-y')\n\t\t\t\t\t\t\t.removeClass('dragging-active');\n\t\t\t\t\t}, 50);\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n\n\t\tvar unbindDestroy = $scope.$on('$destroy', function () {\n\t\t\tunbindDestroy();\n\t\t\tinteract($element[0]).unset();\n\t\t});\n\n\t})\n\t.directive('mwlDraggable', function () {\n\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tcontroller: 'MwlDraggableCtrl'\n\t\t};\n\n\t});\n","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.controller('MwlDateModifierCtrl', function ($element, $attrs, $scope, moment) {\n\n\t\tfunction onClick() {\n\t\t\tif (angular.isDefined($attrs.setToToday)) {\n\t\t\t\t$scope.date = new Date();\n\t\t\t} else if (angular.isDefined($attrs.increment)) {\n\t\t\t\t$scope.date = moment($scope.date).add(1, $scope.increment).toDate();\n\t\t\t} else if (angular.isDefined($attrs.decrement)) {\n\t\t\t\t$scope.date = moment($scope.date).subtract(1, $scope.decrement).toDate();\n\t\t\t}\n\t\t\t$scope.$apply();\n\t\t}\n\n\t\t$element.bind('click', onClick);\n\n\t\t$scope.$on('$destroy', function () {\n\t\t\t$element.unbind('click', onClick);\n\t\t});\n\n\t})\n\t.directive('mwlDateModifier', function () {\n\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tcontroller: 'MwlDateModifierCtrl',\n\t\t\tscope: {\n\t\t\t\tdate: '=',\n\t\t\t\tincrement: '=',\n\t\t\t\tdecrement: '='\n\t\t\t}\n\t\t};\n\n\t});\n","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.controller('MwlCollapseFallbackCtrl', function ($scope, $attrs, $element) {\n\t\tvar unbindWatcher = $scope.$watch($attrs.mwlCollapseFallback, function (shouldCollapse) {\n\t\t\tif (shouldCollapse) {\n\t\t\t\t$element.addClass('ng-hide');\n\t\t\t} else {\n\t\t\t\t$element.removeClass('ng-hide');\n\t\t\t}\n\t\t});\n\n\t\tvar unbindDestroy = $scope.$on('$destroy', function () {\n\t\t\tunbindDestroy();\n\t\t\tunbindWatcher();\n\t\t});\n\n\t})\n\t.directive('mwlCollapseFallback', function ($injector) {\n\n\t\tif ($injector.has('collapseDirective')) {\n\t\t\treturn {};\n\t\t}\n\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tcontroller: 'MwlCollapseFallbackCtrl'\n\t\t};\n\n\t});\n","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.controller('MwlCalendarYearCtrl', function ($scope, moment, calendarHelper) {\n\n\t\tvar vm = this;\n\t\tvar firstRun = true;\n\n\t\t$scope.$on('calendar.refreshView', function () {\n\t\t\tvm.view = calendarHelper.getYearView($scope.events, $scope.currentDay);\n\n\t\t\t//Auto open the calendar to the current day if set\n\t\t\tif ($scope.autoOpen && firstRun) {\n\t\t\t\tfirstRun = false;\n\t\t\t\tvm.view.forEach(function (month) {\n\t\t\t\t\tif (moment($scope.currentDay).startOf('month').isSame(month.date)) {\n\t\t\t\t\t\tvm.monthClicked(month, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t});\n\n\t\tvm.monthClicked = function (month, monthClickedFirstRun) {\n\n\t\t\tif (!monthClickedFirstRun) {\n\t\t\t\t$scope.onTimespanClick({calendarDate: month.date.toDate()});\n\t\t\t}\n\n\t\t\tvm.openRowIndex = null;\n\t\t\tvar monthIndex = vm.view.indexOf(month);\n\t\t\tif (monthIndex === vm.openMonthIndex) { //the month has been clicked and is already open\n\t\t\t\tvm.openMonthIndex = null; //close the open month\n\t\t\t} else {\n\t\t\t\tvm.openMonthIndex = monthIndex;\n\t\t\t\tvm.openRowIndex = Math.floor(monthIndex / 4);\n\t\t\t}\n\n\t\t};\n\n\t\tvm.handleEventDrop = function (event, newMonthDate) {\n\t\t\tvar newStart = moment(event.startsAt).month(moment(newMonthDate).month());\n\t\t\tvar newEnd = calendarHelper.adjustEndDateFromStartDiff(event.startsAt, newStart, event.endsAt);\n\n\t\t\t$scope.onEventDrop({\n\t\t\t\tcalendarEvent: event,\n\t\t\t\tcalendarDate: newMonthDate,\n\t\t\t\tcalendarNewEventStart: newStart.toDate(),\n\t\t\t\tcalendarNewEventEnd: newEnd.toDate()\n\t\t\t});\n\t\t};\n\n\t})\n\t.directive('mwlCalendarYear', function () {\n\n\t\treturn {\n\t\t\ttemplateUrl: 'src/templates/calendarYearView.html',\n\t\t\trestrict: 'EA',\n\t\t\trequire: '^mwlCalendar',\n\t\t\tscope: {\n\t\t\t\tcustomData: '=',\n\t\t\t\tevents: '=',\n\t\t\t\tcurrentDay: '=',\n\t\t\t\tonEventClick: '=',\n\t\t\t\tonEventDrop: '=',\n\t\t\t\tonEditEventClick: '=',\n\t\t\t\tonDeleteEventClick: '=',\n\t\t\t\teditEventHtml: '=',\n\t\t\t\tdeleteEventHtml: '=',\n\t\t\t\tautoOpen: '=',\n\t\t\t\tonTimespanClick: '='\n\t\t\t},\n\t\t\tcontroller: 'MwlCalendarYearCtrl as vm',\n\t\t\tlink: function (scope, element, attrs, calendarCtrl) {\n\t\t\t\tscope.vm.calendarCtrl = calendarCtrl;\n\t\t\t}\n\t\t};\n\n\t});\n","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.controller('MwlCalendarWeekCtrl', function ($scope, $sce, moment, calendarHelper, calendarConfig) {\n\n\t\tvar vm = this;\n\n\t\tvm.showTimes = calendarConfig.showTimesOnWeekView;\n\t\tvm.$sce = $sce;\n\n\t\t$scope.$on('calendar.refreshView', function () {\n\t\t\tvm.dayViewHeight = calendarHelper.getDayViewHeight(\n\t\t\t\t$scope.dayViewStart,\n\t\t\t\t$scope.dayViewEnd,\n\t\t\t\t$scope.dayViewSplit\n\t\t\t);\n\t\t\tif (vm.showTimes) {\n\t\t\t\tvm.view = calendarHelper.getWeekViewWithTimes(\n\t\t\t\t\t$scope.events,\n\t\t\t\t\t$scope.currentDay,\n\t\t\t\t\t$scope.dayViewStart,\n\t\t\t\t\t$scope.dayViewEnd,\n\t\t\t\t\t$scope.dayViewSplit\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tvm.view = calendarHelper.getWeekView($scope.events, $scope.currentDay);\n\t\t\t}\n\t\t});\n\n\t\tvm.weekDragged = function (event, daysDiff, minuteChunksMoved) {\n\n\t\t\tvar newStart = moment(event.startsAt).add(daysDiff, 'days');\n\t\t\tvar newEnd = moment(event.endsAt).add(daysDiff, 'days');\n\n\t\t\tif (minuteChunksMoved) {\n\t\t\t\tvar minutesDiff = minuteChunksMoved * $scope.dayViewSplit;\n\t\t\t\tnewStart = newStart.add(minutesDiff, 'minutes');\n\t\t\t\tnewEnd = newEnd.add(minutesDiff, 'minutes');\n\t\t\t}\n\n\t\t\tdelete event.tempStartsAt;\n\n\t\t\t$scope.onEventDrop({\n\t\t\t\tcalendarEvent: event,\n\t\t\t\tcalendarNewEventStart: newStart.toDate(),\n\t\t\t\tcalendarNewEventEnd: newEnd.toDate()\n\t\t\t});\n\t\t};\n\n\t\tvm.tempTimeChanged = function (event, minuteChunksMoved) {\n\t\t\tvar minutesDiff = minuteChunksMoved * $scope.dayViewSplit;\n\t\t\tevent.tempStartsAt = moment(event.startsAt).add(minutesDiff, 'minutes').toDate();\n\t\t};\n\n\t})\n\t.directive('mwlCalendarWeek', function () {\n\n\t\treturn {\n\t\t\ttemplateUrl: 'src/templates/calendarWeekView.html',\n\t\t\trestrict: 'EA',\n\t\t\trequire: '^mwlCalendar',\n\t\t\tscope: {\n\t\t\t\tcustomData: '=',\n\t\t\t\tevents: '=',\n\t\t\t\tcurrentDay: '=',\n\t\t\t\tonEventClick: '=',\n\t\t\t\tonEventDrop: '=',\n\t\t\t\tdayViewStart: '=',\n\t\t\t\tdayViewEnd: '=',\n\t\t\t\tdayViewSplit: '='\n\t\t\t},\n\t\t\tcontroller: 'MwlCalendarWeekCtrl as vm',\n\t\t\tlink: function (scope, element, attrs, calendarCtrl) {\n\t\t\t\tscope.vm.calendarCtrl = calendarCtrl;\n\t\t\t}\n\t\t};\n\n\t});\n","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.controller('MwlCalendarSlideBoxCtrl', function ($scope, $sce) {\n\n\t\tvar vm = this;\n\t\tvm.$sce = $sce;\n\n\t\tvar unbindWatcher = $scope.$watch('isOpen', function (isOpen) {\n\t\t\tvm.shouldCollapse = !isOpen;\n\t\t});\n\n\t\tvar unbindDestroy = $scope.$on('$destroy', function () {\n\t\t\tunbindDestroy();\n\t\t\tunbindWatcher();\n\t\t});\n\n\t})\n\t.directive('mwlCalendarSlideBox', function () {\n\n\t\treturn {\n\t\t\trestrict: 'EA',\n\t\t\ttemplateUrl: 'src/templates/calendarSlideBox.html',\n\t\t\treplace: true,\n\t\t\tcontroller: 'MwlCalendarSlideBoxCtrl as vm',\n\t\t\trequire: ['^?mwlCalendarMonth', '^?mwlCalendarYear'],\n\t\t\tlink: function (scope, elm, attrs, ctrls) {\n\t\t\t\tscope.isMonthView = !!ctrls[0];\n\t\t\t\tscope.isYearView = !!ctrls[1];\n\t\t\t},\n\t\t\tscope: {\n\t\t\t\tisOpen: '=',\n\t\t\t\tevents: '=',\n\t\t\t\tday: '=',\n\t\t\t\tcurrentDay: '=',\n\t\t\t\tonEventClick: '=',\n\t\t\t\teditEventHtml: '=',\n\t\t\t\tonEditEventClick: '=',\n\t\t\t\tdeleteEventHtml: '=',\n\t\t\t\tonDeleteEventClick: '=',\n\t\t\t\tcustomData: '='\n\t\t\t}\n\t\t};\n\n\t});\n","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.controller('MwlCalendarMonthCtrl', function ($scope, moment, calendarHelper) {\n\n\t\tvar vm = this;\n\t\tvar firstRun = true;\n\n\t\t$scope.$on('calendar.refreshView', function () {\n\n\t\t\tvm.weekDays = calendarHelper.getWeekDayNames();\n\n\t\t\tvm.view = calendarHelper.getMonthView($scope.events, $scope.currentDay);\n\t\t\tvar rows = Math.floor(vm.view.length / 7);\n\t\t\tvm.monthOffsets = [];\n\t\t\tfor (var i = 0; i < rows; i++) {\n\t\t\t\tvm.monthOffsets.push(i * 7);\n\t\t\t}\n\n\t\t\t//Auto open the calendar to the current day if set\n\t\t\tif ($scope.autoOpen && firstRun) {\n\t\t\t\tfirstRun = false;\n\t\t\t\tvm.view.forEach(function (day) {\n\t\t\t\t\tif (day.inMonth && moment($scope.currentDay).startOf('day').isSame(day.date)) {\n\t\t\t\t\t\tvm.dayClicked(day, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t});\n\n\t\tvm.dayClicked = function (day, dayClickedFirstRun) {\n\n\t\t\tif (!dayClickedFirstRun) {\n\t\t\t\t$scope.onTimespanClick({\n\t\t\t\t\tcalendarDate: day.date.toDate()\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tvm.openRowIndex = null;\n\t\t\tvar dayIndex = vm.view.indexOf(day);\n\t\t\tif (dayIndex === vm.openDayIndex) { //the day has been clicked and is already open\n\t\t\t\tvm.openDayIndex = null; //close the open day\n\t\t\t} else {\n\t\t\t\tvm.openDayIndex = dayIndex;\n\t\t\t\tvm.openRowIndex = Math.floor(dayIndex / 7);\n\t\t\t}\n\n\t\t};\n\n\t\tvm.highlightEvent = function (event, shouldAddClass) {\n\n\t\t\tvm.view.forEach(function (day) {\n\t\t\t\tdelete day.highlightClass;\n\t\t\t\tif (shouldAddClass) {\n\t\t\t\t\tvar dayContainsEvent = day.events.indexOf(event) > -1;\n\t\t\t\t\tif (dayContainsEvent) {\n\t\t\t\t\t\tday.highlightClass = 'day-highlight dh-event-' + event.type;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t};\n\n\t\tvm.handleEventDrop = function (event, newDayDate) {\n\n\t\t\tvar newStart = moment(event.startsAt)\n\t\t\t\t.date(moment(newDayDate).date())\n\t\t\t\t.month(moment(newDayDate).month());\n\n\t\t\tvar newEnd = calendarHelper.adjustEndDateFromStartDiff(event.startsAt, newStart, event.endsAt);\n\n\t\t\t$scope.onEventDrop({\n\t\t\t\tcalendarEvent: event,\n\t\t\t\tcalendarDate: newDayDate,\n\t\t\t\tcalendarNewEventStart: newStart.toDate(),\n\t\t\t\tcalendarNewEventEnd: newEnd.toDate()\n\t\t\t});\n\t\t};\n\n\t})\n\t.directive('mwlCalendarMonth', function () {\n\n\t\treturn {\n\t\t\ttemplateUrl: 'src/templates/calendarMonthView.html',\n\t\t\trestrict: 'EA',\n\t\t\trequire: '^mwlCalendar',\n\t\t\tscope: {\n\t\t\t\tday: '=',\n\t\t\t\tcustomData: '=',\n\t\t\t\tevents: '=',\n\t\t\t\tcurrentDay: '=',\n\t\t\t\tonEventClick: '=',\n\t\t\t\tonEditEventClick: '=',\n\t\t\t\tonDeleteEventClick: '=',\n\t\t\t\tonEventDrop: '=',\n\t\t\t\teditEventHtml: '=',\n\t\t\t\tdeleteEventHtml: '=',\n\t\t\t\tautoOpen: '=',\n\t\t\t\tonTimespanClick: '='\n\t\t\t},\n\t\t\tcontroller: 'MwlCalendarMonthCtrl as vm',\n\t\t\tlink: function (scope, element, attrs, calendarCtrl) {\n\t\t\t\tscope.vm.calendarCtrl = calendarCtrl;\n\t\t\t}\n\t\t};\n\n\t});\n","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.controller('MwlCalendarHourListCtrl', function ($scope, moment, calendarConfig, calendarHelper) {\n\t\tvar vm = this;\n\t\tvar dayViewStart, dayViewEnd;\n\n\t\tfunction updateDays() {\n\t\t\tdayViewStart = moment($scope.dayViewStart || '00:00', 'HH:mm');\n\t\t\tdayViewEnd = moment($scope.dayViewEnd || '23:00', 'HH:mm');\n\t\t\tvm.dayViewSplit = parseInt($scope.dayViewSplit);\n\t\t\tvm.hours = [];\n\t\t\tvar dayCounter = moment(dayViewStart);\n\t\t\tfor (var i = 0; i <= dayViewEnd.diff(dayViewStart, 'hours'); i++) {\n\t\t\t\tvm.hours.push({\n\t\t\t\t\tlabel: calendarHelper.formatDate(dayCounter, calendarConfig.dateFormats.hour)\n\t\t\t\t});\n\t\t\t\tdayCounter.add(1, 'hour');\n\t\t\t}\n\t\t}\n\n\t\tvar originalLocale = moment.locale();\n\n\t\t$scope.$on('calendar.refreshView', function () {\n\n\t\t\tif (originalLocale !== moment.locale()) {\n\t\t\t\toriginalLocale = moment.locale();\n\t\t\t\tupdateDays();\n\t\t\t}\n\n\t\t});\n\n\t\tupdateDays();\n\n\t})\n\t.directive('mwlCalendarHourList', function () {\n\n\t\treturn {\n\t\t\trestrict: 'EA',\n\t\t\ttemplateUrl: 'src/templates/calendarHourList.html',\n\t\t\tcontroller: 'MwlCalendarHourListCtrl as vm',\n\t\t\tscope: {\n\t\t\t\tdayViewStart: '=',\n\t\t\t\tdayViewEnd: '=',\n\t\t\t\tdayViewSplit: '='\n\t\t\t}\n\t\t};\n\n\t});\n","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.controller('MwlCalendarDayCtrl', function ($scope, $timeout, $sce, moment, calendarHelper, calendarConfig) {\n\n\t\tvar vm = this;\n\n\t\tvm.calendarConfig = calendarConfig;\n\t\tvm.$sce = $sce;\n\n\t\t$scope.$on('calendar.refreshView', function () {\n\t\t\tvm.dayViewHeight = calendarHelper.getDayViewHeight(\n\t\t\t\t$scope.dayViewStart,\n\t\t\t\t$scope.dayViewEnd,\n\t\t\t\t$scope.dayViewSplit\n\t\t\t);\n\n\t\t\tvm.view = calendarHelper.getDayView(\n\t\t\t\t$scope.events,\n\t\t\t\t$scope.currentDay,\n\t\t\t\t$scope.dayViewStart,\n\t\t\t\t$scope.dayViewEnd,\n\t\t\t\t$scope.dayViewSplit\n\t\t\t);\n\n\t\t});\n\n\t\tvm.timeChanged = function (event, minuteChunksMoved) {\n\t\t\tvar minutesDiff = minuteChunksMoved * $scope.dayViewSplit;\n\t\t\tvar newStart = moment(event.startsAt).add(minutesDiff, 'minutes');\n\t\t\tvar newEnd = moment(event.endsAt).add(minutesDiff, 'minutes');\n\t\t\tdelete event.tempStartsAt;\n\n\t\t\t$scope.onEventDrop({\n\t\t\t\tcalendarEvent: event,\n\t\t\t\tcalendarNewEventStart: newStart.toDate(),\n\t\t\t\tcalendarNewEventEnd: newEnd.toDate()\n\t\t\t});\n\t\t};\n\n\t\tvm.tempTimeChanged = function (event, minuteChunksMoved) {\n\t\t\tvar minutesDiff = minuteChunksMoved * $scope.dayViewSplit;\n\t\t\tevent.tempStartsAt = moment(event.startsAt).add(minutesDiff, 'minutes').toDate();\n\t\t};\n\n\t})\n\t.directive('mwlCalendarDay', function () {\n\n\t\treturn {\n\t\t\ttemplateUrl: 'src/templates/calendarDayView.html',\n\t\t\trestrict: 'EA',\n\t\t\trequire: '^mwlCalendar',\n\t\t\tscope: {\n\t\t\t\tcustomData: '=',\n\t\t\t\tevents: '=',\n\t\t\t\tcurrentDay: '=',\n\t\t\t\tonEventClick: '=',\n\t\t\t\tonEventDrop: '=',\n\t\t\t\tdayViewStart: '=',\n\t\t\t\tdayViewEnd: '=',\n\t\t\t\tdayViewSplit: '='\n\t\t\t},\n\t\t\tcontroller: 'MwlCalendarDayCtrl as vm'\n\t\t};\n\n\t});\n","'use strict';\n\nangular\n\t.module('mwl.calendar')\n\t.controller('MwlCalendarCtrl', function ($scope, $timeout, $window, $locale, moment, calendarTitle, calendarDebounce) {\n\n\t\tvar vm = this;\n\n\t\t$scope.events = $scope.events || [];\n\n\t\tvm.changeView = function (view, newDay) {\n\t\t\t$scope.view = view;\n\t\t\t$scope.currentDay = newDay;\n\t\t};\n\n\t\tvm.drillDown = function (date) {\n\n\t\t\tvar rawDate = moment(date).toDate();\n\n\t\t\tvar nextView = {\n\t\t\t\tyear: 'month',\n\t\t\t\tmonth: 'day',\n\t\t\t\tweek: 'day'\n\t\t\t};\n\n\t\t\tif ($scope.onDrillDownClick({calendarDate: rawDate, calendarNextView: nextView[$scope.view]}) !== false) {\n\t\t\t\tvm.changeView(nextView[$scope.view], rawDate);\n\t\t\t}\n\n\t\t};\n\n\t\tvar previousDate = moment($scope.currentDay);\n\t\tvar previousView = angular.copy($scope.view);\n\n\t\t//Use a debounce to prevent it being called 3 times on initialisation\n\t\tvar refreshCalendar = calendarDebounce(function () {\n\t\t\tif (calendarTitle[$scope.view]) {\n\t\t\t\t$scope.viewTitle = calendarTitle[$scope.view]($scope.currentDay);\n\t\t\t}\n\n\t\t\t$scope.events = $scope.events.map(function (event, index) {\n\t\t\t\tObject.defineProperty(event, '$id', {enumerable: false, value: index, configurable: true});\n\t\t\t\treturn event;\n\t\t\t});\n\n\t\t\t//if on-timespan-click=\"calendarDay = calendarDate\" is set then dont update the view as nothing needs to change\n\t\t\tvar currentDate = moment($scope.currentDay);\n\t\t\tvar shouldUpdate = true;\n\t\t\tif (previousDate.clone().startOf($scope.view).isSame(currentDate.clone().startOf($scope.view)) && !previousDate.isSame(currentDate) &&\n\t\t\t\t$scope.view === previousView) {\n\t\t\t\tshouldUpdate = false;\n\t\t\t}\n\t\t\tpreviousDate = currentDate;\n\t\t\tpreviousView = angular.copy($scope.view);\n\n\t\t\tif (shouldUpdate) {\n\t\t\t\t$scope.$broadcast('calendar.refreshView');\n\t\t\t}\n\t\t}, 50);\n\n\t\t//Auto update the calendar when the locale changes\n\t\tvar unbindLocaleWatcher = $scope.$watch(function () {\n\t\t\treturn moment.locale() + $locale.id;\n\t\t}, refreshCalendar);\n\n\t\tvar unbindOnDestroy = [];\n\t\tunbindOnDestroy.push(unbindLocaleWatcher);\n\n\t\t//Refresh the calendar when any of these variables change.\n\t\tunbindOnDestroy.push($scope.$watch('currentDay', refreshCalendar));\n\t\tunbindOnDestroy.push($scope.$watch('view', refreshCalendar));\n\t\tunbindOnDestroy.push($scope.$watch('events', refreshCalendar, true));\n\n\t\t//Remove any watchers when the calendar is destroyed\n\t\tvar unbindDestroyListener = $scope.$on('$destroy', function () {\n\t\t\tunbindOnDestroy.forEach(function (unbind) {\n\t\t\t\tunbind();\n\t\t\t});\n\t\t});\n\t\tunbindOnDestroy.push(unbindDestroyListener);\n\n\t})\n\t.directive('mwlCalendar', function () {\n\n\t\treturn {\n\t\t\ttemplateUrl: 'src/templates/calendar.html',\n\t\t\trestrict: 'EA',\n\t\t\tscope: {\n\t\t\t\tcustomData: '=',\n\t\t\t\tevents: '=',\n\t\t\t\tview: '=',\n\t\t\t\tviewTitle: '=',\n\t\t\t\tcurrentDay: '=',\n\t\t\t\teditEventHtml: '=',\n\t\t\t\tdeleteEventHtml: '=',\n\t\t\t\tautoOpen: '=',\n\t\t\t\tonEventClick: '&',\n\t\t\t\tonEventDrop: '&',\n\t\t\t\tonEditEventClick: '&',\n\t\t\t\tonDeleteEventClick: '&',\n\t\t\t\tonTimespanClick: '&',\n\t\t\t\tonDrillDownClick: '&',\n\t\t\t\tdayViewStart: '@',\n\t\t\t\tdayViewEnd: '@',\n\t\t\t\tdayViewSplit: '@'\n\t\t\t},\n\t\t\tcontroller: 'MwlCalendarCtrl as vm'\n\t\t};\n\n\t});\n"],"sourceRoot":"/source/"}